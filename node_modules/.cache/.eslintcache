[{"C:\\Users\\ahmed\\OneDrive\\Bureau\\4SIM4\\PIM\\PimBackOfficReact-master\\src\\index.js":"1","C:\\Users\\ahmed\\OneDrive\\Bureau\\4SIM4\\PIM\\PimBackOfficReact-master\\src\\reportWebVitals.js":"2","C:\\Users\\ahmed\\OneDrive\\Bureau\\4SIM4\\PIM\\PimBackOfficReact-master\\src\\components\\layout\\Layout.jsx":"3","C:\\Users\\ahmed\\OneDrive\\Bureau\\4SIM4\\PIM\\PimBackOfficReact-master\\src\\redux\\reducers\\index.js":"4","C:\\Users\\ahmed\\OneDrive\\Bureau\\4SIM4\\PIM\\PimBackOfficReact-master\\src\\redux\\actions\\ThemeAction.js":"5","C:\\Users\\ahmed\\OneDrive\\Bureau\\4SIM4\\PIM\\PimBackOfficReact-master\\src\\pages\\Login\\login.js":"6","C:\\Users\\ahmed\\OneDrive\\Bureau\\4SIM4\\PIM\\PimBackOfficReact-master\\src\\components\\Routes.jsx":"7","C:\\Users\\ahmed\\OneDrive\\Bureau\\4SIM4\\PIM\\PimBackOfficReact-master\\src\\components\\sidebar\\Sidebar.jsx":"8","C:\\Users\\ahmed\\OneDrive\\Bureau\\4SIM4\\PIM\\PimBackOfficReact-master\\src\\components\\topnav\\TopNav.jsx":"9","C:\\Users\\ahmed\\OneDrive\\Bureau\\4SIM4\\PIM\\PimBackOfficReact-master\\src\\redux\\reducers\\ThemeReducer.js":"10","C:\\Users\\ahmed\\OneDrive\\Bureau\\4SIM4\\PIM\\PimBackOfficReact-master\\src\\pages\\Login\\LoginElements.js":"11","C:\\Users\\ahmed\\OneDrive\\Bureau\\4SIM4\\PIM\\PimBackOfficReact-master\\src\\pages\\Dashboard.jsx":"12","C:\\Users\\ahmed\\OneDrive\\Bureau\\4SIM4\\PIM\\PimBackOfficReact-master\\src\\pages\\Customers.jsx":"13","C:\\Users\\ahmed\\OneDrive\\Bureau\\4SIM4\\PIM\\PimBackOfficReact-master\\src\\helpers\\base_url.jsx":"14","C:\\Users\\ahmed\\OneDrive\\Bureau\\4SIM4\\PIM\\PimBackOfficReact-master\\src\\pages\\Orders\\Orders.jsx":"15","C:\\Users\\ahmed\\OneDrive\\Bureau\\4SIM4\\PIM\\PimBackOfficReact-master\\src\\pages\\Menues\\Menu.jsx":"16","C:\\Users\\ahmed\\OneDrive\\Bureau\\4SIM4\\PIM\\PimBackOfficReact-master\\src\\pages\\Resto\\Resto.jsx":"17","C:\\Users\\ahmed\\OneDrive\\Bureau\\4SIM4\\PIM\\PimBackOfficReact-master\\src\\pages\\Finance\\Finance.jsx":"18","C:\\Users\\ahmed\\OneDrive\\Bureau\\4SIM4\\PIM\\PimBackOfficReact-master\\src\\pages\\NFT\\NFT.jsx":"19","C:\\Users\\ahmed\\OneDrive\\Bureau\\4SIM4\\PIM\\PimBackOfficReact-master\\src\\components\\thememenu\\ThemeMenu.jsx":"20","C:\\Users\\ahmed\\OneDrive\\Bureau\\4SIM4\\PIM\\PimBackOfficReact-master\\src\\components\\dropdown\\Dropdown.jsx":"21","C:\\Users\\ahmed\\OneDrive\\Bureau\\4SIM4\\PIM\\PimBackOfficReact-master\\src\\components\\status-card\\StatusCard.jsx":"22","C:\\Users\\ahmed\\OneDrive\\Bureau\\4SIM4\\PIM\\PimBackOfficReact-master\\src\\components\\table\\Table.jsx":"23","C:\\Users\\ahmed\\OneDrive\\Bureau\\4SIM4\\PIM\\PimBackOfficReact-master\\src\\components\\badge\\Badge.jsx":"24"},{"size":1086,"mtime":1649672248000,"results":"25","hashOfConfig":"26"},{"size":362,"mtime":1649672248000,"results":"27","hashOfConfig":"26"},{"size":1562,"mtime":1649672248000,"results":"28","hashOfConfig":"26"},{"size":162,"mtime":1649672248000,"results":"29","hashOfConfig":"26"},{"size":364,"mtime":1649672248000,"results":"30","hashOfConfig":"26"},{"size":1963,"mtime":1649672248000,"results":"31","hashOfConfig":"26"},{"size":1084,"mtime":1649677612801,"results":"32","hashOfConfig":"26"},{"size":1635,"mtime":1649672248000,"results":"33","hashOfConfig":"26"},{"size":3544,"mtime":1650149420478,"results":"34","hashOfConfig":"26"},{"size":399,"mtime":1649672248000,"results":"35","hashOfConfig":"26"},{"size":1338,"mtime":1649672248000,"results":"36","hashOfConfig":"26"},{"size":7344,"mtime":1649674360155,"results":"37","hashOfConfig":"26"},{"size":1487,"mtime":1649672248000,"results":"38","hashOfConfig":"26"},{"size":46,"mtime":1649672248000,"results":"39","hashOfConfig":"26"},{"size":4126,"mtime":1650151192781,"results":"40","hashOfConfig":"26"},{"size":19818,"mtime":1649672248000,"results":"41","hashOfConfig":"26"},{"size":5369,"mtime":1649672248000,"results":"42","hashOfConfig":"26"},{"size":2233,"mtime":1649672248000,"results":"43","hashOfConfig":"26"},{"size":328,"mtime":1649672248000,"results":"44","hashOfConfig":"26"},{"size":4901,"mtime":1649672248000,"results":"45","hashOfConfig":"26"},{"size":1537,"mtime":1649672248000,"results":"46","hashOfConfig":"26"},{"size":448,"mtime":1649672248000,"results":"47","hashOfConfig":"26"},{"size":2402,"mtime":1649672248000,"results":"48","hashOfConfig":"26"},{"size":183,"mtime":1649672248000,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"53"},"1cr3zoy",{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"53"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"53"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"53"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"53"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"53"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"53"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},"C:\\Users\\ahmed\\OneDrive\\Bureau\\4SIM4\\PIM\\PimBackOfficReact-master\\src\\index.js",["107","108"],"import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nimport { createStore } from \"redux\";\n\nimport { Provider } from \"react-redux\";\n\nimport rootReducer from \"./redux/reducers\";\n\nimport \"./assets/boxicons-2.0.7/css/boxicons.min.css\";\nimport \"./assets/css/grid.css\";\nimport \"./assets/css/theme.css\";\nimport \"./assets/css/index.css\";\n\nimport Layout from \"./components/layout/Layout\";\nimport { Web3ReactProvider } from \"@web3-react/core\";\nimport { Web3Provider } from \"@ethersproject/providers\";\n\nfunction getLibrary(provider) {\n  return new Web3Provider(provider);\n}\nconst store = createStore(rootReducer);\n\ndocument.title = \"LEDY Admin\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <Layout />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["109","110"],"C:\\Users\\ahmed\\OneDrive\\Bureau\\4SIM4\\PIM\\PimBackOfficReact-master\\src\\reportWebVitals.js",[],"C:\\Users\\ahmed\\OneDrive\\Bureau\\4SIM4\\PIM\\PimBackOfficReact-master\\src\\components\\layout\\Layout.jsx",[],"C:\\Users\\ahmed\\OneDrive\\Bureau\\4SIM4\\PIM\\PimBackOfficReact-master\\src\\redux\\reducers\\index.js",[],"C:\\Users\\ahmed\\OneDrive\\Bureau\\4SIM4\\PIM\\PimBackOfficReact-master\\src\\redux\\actions\\ThemeAction.js",[],"C:\\Users\\ahmed\\OneDrive\\Bureau\\4SIM4\\PIM\\PimBackOfficReact-master\\src\\pages\\Login\\login.js",["111","112"],"import React ,{useState}from 'react';\nimport { Wrapper,Form ,Input,Button, Title} from './LoginElements';\nimport { BaseUrl } from '../../helpers/base_url';\nimport axios from 'axios';\nimport { useHistory } from \"react-router-dom\";\nconst Login=()=>{\n    const [email,setEmail] = useState('');\n    const [password,setPassword] = useState('');\n    const history = useHistory();\n    const doTheLogin= async() =>  {\n      await axios.post(\n        BaseUrl + \"/employe/login\",\n        {\n          email: email ,\n          password: password\n        }\n      ).then((res) => {\n        if (res.status == 200) {\n          localStorage.setItem('auth',true);\n          localStorage.setItem('id',res.data['employe']['_id']);\n          localStorage.setItem('firstname',res.data['employe']['firstName']);\n          localStorage.setItem('lastname',res.data['employe']['lastName']);\n          localStorage.setItem('email',res.data['employe']['email']);\n          localStorage.setItem('restaurant_id',res.data['employe']['restaurant']);\n          localStorage.setItem('role',res.data['employe']['role']);\n          history.push(\"/\");\n        }\n        if (res.status == 422)\n        {\n          alert(`Invalid email or password`);\n        }\n        console.log(res);\n      });\n    }\n    const handleSubmit = event => {\n      event.preventDefault();\n      doTheLogin();\n    };\n    return <>\n  <Wrapper>\n        <Form onSubmit={handleSubmit}>\n            <Title>Welcome</Title>\n          <Input\n            type=\"email\"\n            name=\"email\"\n            onChange={e=>setEmail(e.target.value)}\n            placeholder='email'\n            value={email}\n          />\n          <Input\n          onChange={e=>setPassword(e.target.value)}\n            type=\"password\"\n            name=\"password\"\n            placeholder='password'\n            value={password}\n          />\n          <Button type=\"submit\">Login</Button>\n        </Form>\n      </Wrapper>\n    </>\n};  \nexport default Login;\n","C:\\Users\\ahmed\\OneDrive\\Bureau\\4SIM4\\PIM\\PimBackOfficReact-master\\src\\components\\Routes.jsx",[],"C:\\Users\\ahmed\\OneDrive\\Bureau\\4SIM4\\PIM\\PimBackOfficReact-master\\src\\components\\sidebar\\Sidebar.jsx",["113","114","115"],"import React from 'react'\n\nimport { Link } from 'react-router-dom'\n\nimport './sidebar.css'\n\nimport logo from '../../assets/images/LEDYLOGO.png'\n\nimport sidebar_items from '../../assets/JsonData/sidebar_routes.json'\n\nimport sidebar_items_owner from '../../assets/JsonData/sidebar_routes.json'\n\n\nconst SidebarItem = props => {\n\n    const active = props.active ? 'active' : ''\n\n    return (\n        <div className=\"sidebar__item\">\n            <div className={`sidebar__item-inner ${active}`}>\n                <i className={props.icon}></i>\n                <span>\n                    {props.title}\n                </span>\n            </div>\n        </div>\n    )\n}\n\nconst Sidebar = props => {\n    let role = \"waiter\"\n    let items =[];\n    if(role==\"waiter\"){\n        items=sidebar_items\n    }else if(role==\"owner\"){\n        items=sidebar_items_owner\n    }\n\n    const activeItem = items.findIndex(item => item.route === props.location.pathname)\n    const activeItemOwner = items.findIndex(item=>item.route===props.location.pathname)\n    return (\n        <div className='sidebar'>\n            <div className=\"sidebar__logo\">\n                <img src={logo} alt=\"company logo\" />\n            </div>\n            {\n                items.map((item, index) => (\n                    <Link to={item.route} key={index}>\n                        <SidebarItem\n                            title={item.display_name}\n                            icon={item.icon}\n                            active={index === activeItem}\n                        />\n                    </Link>\n                ))\n            }\n        </div>\n    )\n}\n\nexport default Sidebar\n","C:\\Users\\ahmed\\OneDrive\\Bureau\\4SIM4\\PIM\\PimBackOfficReact-master\\src\\components\\topnav\\TopNav.jsx",["116","117","118"],"import React, { useState } from \"react\";\n\nimport \"./topnav.css\";\n\nimport { Link } from \"react-router-dom\";\n\nimport Dropdown from \"../dropdown/Dropdown\";\n\nimport ThemeMenu from \"../thememenu/ThemeMenu\";\n\nimport axios from \"axios\";\nimport socketIOClient from \"socket.io-client\";\nimport { BaseUrl } from \"../../helpers/base_url\";\n\nimport user_image from \"../../assets/images/tuat.png\";\n\nimport user_menu from \"../../assets/JsonData/user_menus.json\";\nimport { useHistory } from \"react-router-dom\";\nconst SERVER = \"http://127.0.0.1:4000\";\n\nconst Topnav = () => {\n  const [listNotif, setlistNotif] = useState([]);\n  const [dataReady, setdataReady] = useState(false);\n  const [notifNumber, setnotifNumber] = useState(0);\n  React.useEffect(async () => {\n    var socket = socketIOClient(SERVER);\n    socket.on(\n      \"newcommand\" + localStorage.getItem(\"restaurant_id\"),\n      (command) => {\n        setnotifNumber(notifNumber + 1);\n        setlistNotif((prev) => [command, ...prev]);\n      }\n    );\n\n    await axios\n      .get(\n        BaseUrl +\n          \"/command/getall/byrestaurantid/\" +\n          localStorage.getItem(\"restaurant_id\")\n      )\n      .then((response) => {\n        setlistNotif(response.data);\n        setdataReady(true);\n      });\n    return () => socket.disconnect();\n  }, []);\n  const curr_user = {\n    display_name:\n      localStorage.getItem(\"firstname\") +\n      \" \" +\n      localStorage.getItem(\"lastname\"),\n    image: user_image,\n  };\n\n  const renderNotificationItem = (item, index) => (\n    <div className=\"notification-item\" key={index}>\n      <i className=\"bx bx-cart\"></i>\n      <span>New Order {item[\"price\"]} DT</span>\n    </div>\n  );\n\n  const renderUserToggle = (user) => (\n    <div className=\"topnav__right-user\">\n      <div className=\"topnav__right-user__image\">\n        <img src={user.image} alt=\"\" />\n      </div>\n      <div className=\"topnav__right-user__name\">{user.display_name}</div>\n    </div>\n  );\n  const history = useHistory();\n\n  const actionMenu = (item) => {\n    console.log(\"aaaaaa\");\n    if (item == \"Logout\") {\n      localStorage.clear();\n      history.push(\"/login\");\n    }\n  };\n  const renderUserMenu = (item, index) => (\n    <Link key={index} onClick={() => actionMenu(item.content)}>\n      <div className=\"notification-item\">\n        <i className={item.icon}></i>\n        <span>{item.content}</span>\n      </div>\n    </Link>\n  );\n  const showNotif = () => {};\n  return (\n    <div className=\"topnav\">\n      <div className=\"topnav__search\"></div>\n      <div className=\"topnav__right\">\n        <div className=\"topnav__right-item\">\n          {/* dropdown here */}\n          <Dropdown\n            customToggle={() => renderUserToggle(curr_user)}\n            contentData={user_menu}\n            renderItems={(item, index) => renderUserMenu(item, index)}\n          />\n        </div>\n        <div className=\"topnav__right-item\">\n          {dataReady ? (\n            <div onClick={showNotif}>\n              <Dropdown\n                icon=\"bx bx-bell\"\n                badge={notifNumber}\n                contentData={listNotif.slice(0, 5)}\n                renderItems={(item, index) =>\n                  renderNotificationItem(item, index)\n                }\n                renderFooter={() => <Link to=\"/orders\">View All</Link>}\n              />\n            </div>\n          ) : (\n            <div></div>\n          )}\n\n          {/* dropdown here */}\n        </div>\n        <div className=\"topnav__right-item\">\n          <ThemeMenu />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Topnav;\n","C:\\Users\\ahmed\\OneDrive\\Bureau\\4SIM4\\PIM\\PimBackOfficReact-master\\src\\redux\\reducers\\ThemeReducer.js",[],"C:\\Users\\ahmed\\OneDrive\\Bureau\\4SIM4\\PIM\\PimBackOfficReact-master\\src\\pages\\Login\\LoginElements.js",[],"C:\\Users\\ahmed\\OneDrive\\Bureau\\4SIM4\\PIM\\PimBackOfficReact-master\\src\\pages\\Dashboard.jsx",["119","120","121","122","123"],"import React, { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nimport { Link } from \"react-router-dom\";\n\nimport Chart from \"react-apexcharts\";\n\nimport axios from \"axios\";\nimport { BaseUrl } from \"../helpers/base_url\";\nimport { useSelector } from \"react-redux\";\n\nimport StatusCard from \"../components/status-card/StatusCard\";\n\nimport Table from \"../components/table/Table\";\n\nimport Badge from \"../components/badge/Badge\";\n\nimport statusCards from \"../assets/JsonData/status-card-data.json\";\n\nconst chartOptions = {\n  series: [\n    {\n      name: \"Online Customers\",\n      data: [40, 70, 20, 90, 36, 80, 30, 91, 60],\n    },\n    {\n      name: \"Store Customers\",\n      data: [40, 30, 70, 80, 40, 16, 40, 20, 51, 10],\n    },\n  ],\n  options: {\n    color: [\"#6ab04c\", \"#2980b9\"],\n    chart: {\n      background: \"transparent\",\n    },\n    dataLabels: {\n      enabled: false,\n    },\n    stroke: {\n      curve: \"smooth\",\n    },\n    xaxis: {\n      categories: [\n        \"Jan\",\n        \"Feb\",\n        \"Mar\",\n        \"Apr\",\n        \"May\",\n        \"Jun\",\n        \"Jul\",\n        \"Aug\",\n        \"Sep\",\n      ],\n    },\n    legend: {\n      position: \"top\",\n    },\n    grid: {\n      show: false,\n    },\n  },\n};\n\nconst topCustomers = {\n  head: [\"user\", \"total orders\", \"total spending\"],\n  body: [\n    {\n      username: \"john doe\",\n      order: \"490\",\n      price: \"$15,870\",\n    },\n    {\n      username: \"frank iva\",\n      order: \"250\",\n      price: \"$12,251\",\n    },\n    {\n      username: \"anthony baker\",\n      order: \"120\",\n      price: \"$10,840\",\n    },\n    {\n      username: \"frank iva\",\n      order: \"110\",\n      price: \"$9,251\",\n    },\n    {\n      username: \"anthony baker\",\n      order: \"80\",\n      price: \"$8,840\",\n    },\n  ],\n};\n\nconst renderCusomerHead = (item, index) => <th key={index}>{item}</th>;\n\nconst renderCusomerBody = (item, index) => (\n  <tr key={index}>\n    <td>{item.username}</td>\n    <td>{item.order}</td>\n    <td>{item.price}</td>\n  </tr>\n);\n\nconst latestOrders = {\n  header: [\"order id\", \"user\", \"total price\", \"date\", \"status\"],\n  body: [\n    {\n      id: \"#OD1711\",\n      user: \"john doe\",\n      date: \"17 Jun 2021\",\n      price: \"$900\",\n      status: \"shipping\",\n    },\n    {\n      id: \"#OD1712\",\n      user: \"frank iva\",\n      date: \"1 Jun 2021\",\n      price: \"$400\",\n      status: \"paid\",\n    },\n    {\n      id: \"#OD1713\",\n      user: \"anthony baker\",\n      date: \"27 Jun 2021\",\n      price: \"$200\",\n      status: \"pending\",\n    },\n    {\n      id: \"#OD1712\",\n      user: \"frank iva\",\n      date: \"1 Jun 2021\",\n      price: \"$400\",\n      status: \"paid\",\n    },\n    {\n      id: \"#OD1713\",\n      user: \"anthony baker\",\n      date: \"27 Jun 2021\",\n      price: \"$200\",\n      status: \"refund\",\n    },\n  ],\n};\n\nconst orderStatus = {\n  shipping: \"primary\",\n  pending: \"warning\",\n  paid: \"success\",\n  refund: \"danger\",\n};\n\nconst renderOrderHead = (item, index) => <th key={index}>{item}</th>;\n\nconst renderOrderBody = (item, index) => (\n  <tr key={index}>\n    <td>{item.id}</td>\n    <td>{item.user}</td>\n    <td>{item.price}</td>\n    <td>{item.date}</td>\n    <td>\n      <Badge type={orderStatus[item.status]} content={item.status} />\n    </td>\n  </tr>\n);\n\nconst Dashboard = () => {\n  const [totalIncome, setTotalIncome] = useState(0);\n  const [totalOrders, settotalOrders] = useState(0);\n  const [dataReady, setdataReady] = useState(false);\n  const [numberCompletedOrders, setnumberCompletedOrders] = useState(0);\n  const history = useHistory();\n  if (localStorage.getItem(\"auth\") != \"true\") {\n    //check condition\n    history.push(\"/login\");\n  }\n  const themeReducer = useSelector((state) => state.ThemeReducer.mode);\n  React.useEffect(async () => {\n    await axios\n      .get(\n        BaseUrl +\n          \"/command/getall/byrestaurantid/\" +\n          localStorage.getItem(\"restaurant_id\")\n      )\n      .then((response) => {\n        console.log(response.data);\n        let money = 0;\n        let totalsales = 0;\n        response.data.forEach((element) => {\n          if (element.etat == \"Completed\") {\n            console.log(\"salem\");\n            totalsales++;\n            money = money + element.price;\n          }\n        });\n        settotalOrders(response.data.length);\n        setTotalIncome(money);\n        setnumberCompletedOrders(totalsales);\n        // setlistOrder(response.data);\n        setdataReady(true);\n      });\n  });\n  return (\n    <div>\n      <h2 className=\"page-header\">Dashboard</h2>\n      <div className=\"row\">\n        {dataReady ? (\n          <div className=\"col-6\">\n            <div className=\"row\">\n              <div className=\"col-6\" key={1}>\n                <StatusCard\n                  icon=\"bx bx-dollar-circle\"\n                  count={\"$\" + totalIncome}\n                  title=\"Total income\"\n                />\n              </div>\n              <div className=\"col-6\" key={2}>\n                <StatusCard\n                  icon=\"bx bx-receipt\"\n                  count={totalOrders}\n                  title=\"Total orders\"\n                />\n              </div>\n              <div className=\"col-6\" key={3}>\n                <StatusCard\n                  icon=\"bx bx-shopping-bag\"\n                  count={numberCompletedOrders}\n                  title=\"Total sales\"\n                />\n              </div>\n            </div>\n          </div>\n        ) : (\n          <div></div>\n        )}\n\n        <div className=\"col-6\">\n          <div className=\"card full-height\">\n            {/* chart */}\n            <Chart\n              options={\n                themeReducer === \"theme-mode-dark\"\n                  ? {\n                      ...chartOptions.options,\n                      theme: { mode: \"dark\" },\n                    }\n                  : {\n                      ...chartOptions.options,\n                      theme: { mode: \"light\" },\n                    }\n              }\n              series={chartOptions.series}\n              type=\"line\"\n              height=\"100%\"\n            />\n          </div>\n        </div>\n        <div className=\"col-4\">\n          <div className=\"card\">\n            <div className=\"card__header\">\n              <h3>top customers</h3>\n            </div>\n            <div className=\"card__body\">\n              <Table\n                headData={topCustomers.head}\n                renderHead={(item, index) => renderCusomerHead(item, index)}\n                bodyData={topCustomers.body}\n                renderBody={(item, index) => renderCusomerBody(item, index)}\n              />\n            </div>\n            <div className=\"card__footer\">\n              <Link to=\"/\">view all</Link>\n            </div>\n          </div>\n        </div>\n        <div className=\"col-8\">\n          <div className=\"card\">\n            <div className=\"card__header\">\n              <h3>latest orders</h3>\n            </div>\n            <div className=\"card__body\">\n              <Table\n                headData={latestOrders.header}\n                renderHead={(item, index) => renderOrderHead(item, index)}\n                bodyData={latestOrders.body}\n                renderBody={(item, index) => renderOrderBody(item, index)}\n              />\n            </div>\n            <div className=\"card__footer\">\n              <Link to=\"/\">view all</Link>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Dashboard;\n","C:\\Users\\ahmed\\OneDrive\\Bureau\\4SIM4\\PIM\\PimBackOfficReact-master\\src\\pages\\Customers.jsx",[],"C:\\Users\\ahmed\\OneDrive\\Bureau\\4SIM4\\PIM\\PimBackOfficReact-master\\src\\helpers\\base_url.jsx",[],"C:\\Users\\ahmed\\OneDrive\\Bureau\\4SIM4\\PIM\\PimBackOfficReact-master\\src\\pages\\Orders\\Orders.jsx",["124","125","126"],"import React from \"react\";\nimport Badge from \"../../components/badge/Badge\";\n\nimport axios from \"axios\";\nimport { BaseUrl } from \"../../helpers/base_url\";\nimport Table from \"../../components/table/Table\";\nimport socketIOClient from \"socket.io-client\";\nimport { useState } from \"react\";\nconst SERVER = \"http://localhost:4000\";\n\nconst Orders = () => {\n  const [listOrder, setlistOrder] = useState([]);\n  const [dataReady, setdataReady] = useState(false);\n  const [newOrdersList, setnewOrdersList] = useState([]);\n  const customerTableHead = [\"date\", \"note\", \"price\", \"meal number\", \"Etat\"];\n\n  const orderStatus = {\n    \"non confirmer\": \"warning\",\n    Completed: \"success\",\n  };\n  const renderHead = (item, index) => <th key={index}>{item}</th>;\n  const renderOrderBody = (item, index) => (\n    <tr key={index}>\n      <td className=\" col-4\">{item.createdAt}</td>\n\n      <td className=\" col-2\">{item.note}</td>\n\n      <td className=\" col-2\">{item.price}</td>\n\n      <td className=\" col-2\">{item.meals.length}</td>\n      <td>\n        <Badge type={orderStatus[item.etat]} content={item.etat} />\n      </td>\n    </tr>\n  );\n  const getmealbyId = (id) => {};\n  React.useEffect(async () => {\n    var socket = socketIOClient(SERVER);\n    socket.on(\n      \"newcommand\" + localStorage.getItem(\"restaurant_id\"),\n      (command) => {\n        setnewOrdersList((newOrdersList) => [...newOrdersList, command]);\n        console.log(\"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\")\n      }\n    );\n\n    await axios\n      .get(\n        BaseUrl +\n          \"/command/getall/byrestaurantid/\" +\n          localStorage.getItem(\"restaurant_id\")\n      )\n      .then((response) => {\n        //   console.log(response.data);\n        setlistOrder(response.data);\n        setdataReady(true);\n      });\n    return () => socket.disconnect();\n  }, []);\n  const renderNewOrder = (item) => {\n    <div className=\"card col-8\">\n      <div className=\"card__body\">\n        <div className=\"row\">\n          <div className=\"col-4\">\n            {\" \"}\n            <h3>New Order</h3>\n          </div>\n          <div className=\"col-4\">\n            <button className=\"button col-6\">Accept</button>\n          </div>\n        </div>\n        <br />\n        <h4>Note :</h4>\n        <p>{item.note}</p>\n        <br />\n\n        <h4>Meal List :</h4>\n        {item.meals.map((item) => (\n          <p>{item.name}</p>\n        ))}\n        <br />\n\n        <h4>Price :</h4>\n        <p>{item.price}</p>\n      </div>\n    </div>;\n  };\n\n  return (\n    <div className=\"col-12\">\n      <h2 className=\"page-header\">Orders</h2>\n      <br />\n      <div>\n        {newOrdersList.sort().map((item) => (\n          <div className=\"card col-8\">\n            <div className=\"card__body\">\n              <div className=\"row\">\n                <div className=\"col-4\">\n                  {\" \"}\n                  <h3>New Order</h3>\n                </div>\n                <div className=\"col-4\">\n                  <button className=\"button col-6\">Accept</button>\n                </div>\n              </div>\n              <br />\n              <h4>Note :</h4>\n              <p>{item.note}</p>\n              <br />\n\n              <h4>Meal List :</h4>\n              {item.meals.sort().map((meal) => (\n                <p>{meal.name} </p>\n              ))}\n              <br />\n\n              <h4>Price :</h4>\n              <p>{item.price}</p>\n            </div>\n          </div>\n        ))}\n      </div>\n      <div className=\"col-12\">\n        <div className=\"row\">\n          <div className=\"col-12\">\n            <div className=\"card\">\n              <div className=\"card__body\">\n                {dataReady ? (\n                  <Table\n                    limit=\"10\"\n                    headData={customerTableHead}\n                    renderHead={(item, index) => renderHead(item, index)}\n                    bodyData={listOrder}\n                    renderBody={(item, index) => renderOrderBody(item, index)}\n                  />\n                ) : (\n                  <div></div>\n                )}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Orders;\n","C:\\Users\\ahmed\\OneDrive\\Bureau\\4SIM4\\PIM\\PimBackOfficReact-master\\src\\pages\\Menues\\Menu.jsx",["127","128","129","130","131"],"import React, { useState } from \"react\";\nimport { Input } from \"../Login/LoginElements\";\nimport axios from \"axios\";\nimport { BaseUrl } from \"../../helpers/base_url\";\nimport Table from \"../../components/table/Table\";\nimport { useHistory } from \"react-router-dom\";\n\nconst Menu = () => {\n  const [openAddCategorie, setopenAddCategorie] = useState(false);\n  const [categorietoadd, setcategorietoadd] = useState(\"\");\n  const [listCategories, setlistCategories] = useState([]);\n  const [listMeal, setlistMeal] = useState([]);\n  const [categorieTitle, setcategorieTitle] = useState(\"\");\n  const [openEdit, setopenEdit] = useState(false);\n  const [dataReady, setdataReady] = useState(false);\n  const [openMealDetail, setopenMealDetail] = useState(false);\n  const [openIngredientLis, setopenIngredientLis] = useState(false);\n  const [ingrediantList, setingrediantList] = useState([]);\n  const [openaddMeal, setopenaddMeal] = useState(false);\n  const [selectedFile, setSelectedFile] = React.useState(null);\n  const [selectedFileMeal, setSelectedFileMeal] = React.useState(null);\n  const handleFileSelectMeal = (event) => {\n    setSelectedFileMeal(event.target.files[0]);\n  };\n  const handleFileSelect = (event) => {\n    setSelectedFile(event.target.files[0]);\n  };\n  const [erroraddingrediant, seterroraddingrediant] = useState(false);\n  const [ingrediantToNewMeal, setingrediantToNewMeal] = useState();\n  const [addIngrediantToExist, setaddIngrediantToExist] = useState(false);\n  const [ingrediantlistNew, setingrediantlistNew] = useState([]);\n  const [mealtoAdd, setmealtoAdd] = useState({\n    name: \"\",\n    price: 0,\n    discount: 0,\n    duration: 0,\n    hotMeal: false,\n    description: \"\",\n  });\n  const [meal, setmeal] = useState({\n    name: \"\",\n    price: 0,\n    discount: 0,\n    duration: 0,\n    hotMeal: false,\n    description: \"\",\n  });\n  const doopeningrediantList = () => {\n    setopenIngredientLis(!openIngredientLis);\n  };\n  const customerTableHead = [\"\", \"name\", \"Edit\"];\n  const mealTableHead = [\"\", \"name\", \"detail\", \"delete\"];\n  const ingrediantTableHead = [\"name\", \"delete\"];\n\n  const renderHead = (item, index) => <th key={index}>{item}</th>;\n  const renderIngrediantHead = (item, index) => (\n    <th key={index} className=\" col-1\">\n      {item}\n    </th>\n  );\n\n  const openEditCatfore = async (categorie) => {\n    setopenEdit(false);\n    setopenMealDetail(false);\n    if (categorie.meals != undefined) {\n      await setlistMeal(categorie.meals);\n    }\n    setcategorieTitle(categorie.name);\n    setopenEdit(true);\n  };\n  const renderBody = (item, index) => (\n    <tr key={index}>\n      <td></td>\n      <td>{item.name}</td>\n      <td>\n        <button onClick={() => openEditCatfore(item)} className=\"button col-6\">\n          Edit\n        </button>\n      </td>\n    </tr>\n  );\n  const opedEditMeal = async (onemeal) => {\n    setopenMealDetail(false);\n    await setingrediantList(onemeal.ingrediants);\n    setmeal({\n      name: onemeal.name,\n      price: onemeal.price,\n      discount: onemeal.discount,\n      duration: onemeal.duration,\n      hotMeal: onemeal.hotMeal,\n      description: onemeal.description,\n    });\n    setopenMealDetail(true);\n  };\n  const renderIngrediantBody = (item, index) => (\n    <tr key={index}>\n      <td className=\" col-1\">{item}</td>\n\n      <td>\n        <button className=\"button col-6\">Delete</button>\n      </td>\n    </tr>\n  );\n  const deleteMeal = (meal) => {};\n  const renderMealBody = (item, index) => (\n    <tr key={index}>\n      <td></td>\n      <td>{item.name}</td>\n      <td>\n        <button className=\"button col-10\" onClick={() => opedEditMeal(item)}>\n          Detail\n        </button>\n      </td>\n      <td>\n        <button className=\"button col-10\" onClick={() => deleteMeal(item)}>\n          delete\n        </button>\n      </td>\n    </tr>\n  );\n  const history = useHistory();\n  if (localStorage.getItem(\"auth\") != \"true\") {\n    //check condition\n    history.push(\"/login\");\n  }\n  React.useEffect(async () => {\n    await axios\n      .get(\n        BaseUrl +\n          \"/menu/getbyrestaurant/\" +\n          localStorage.getItem(\"restaurant_id\")\n      )\n      .then((response) => {\n        setlistCategories(response.data[\"categories\"]);\n        setdataReady(true);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }, []);\n  const doOpenAddCategorie = () => {\n    setopenAddCategorie(true);\n  };\n  const doCloseAddMeal = () => {\n    setopenaddMeal(false);\n  };\n  const doOpenAddMeal = () => {\n    setopenaddMeal(true);\n  };\n  const doCloseopenAddCategorie = () => {\n    setopenAddCategorie(false);\n  };\n  const addCategorie = () => {\n    const formData = new FormData();\n    formData.append(\"image\", selectedFile);\n    formData.append(\"name\", categorietoadd);\n    axios\n      .post(BaseUrl + \"/categories/createwithoutMeals\", formData, {\n        headers: { restaurantid: localStorage.getItem(\"restaurant_id\") },\n      })\n      .then((res) => {\n        if (res.status == 201) {\n          listCategories.push({ name: res.data[\"name\"] });\n          doCloseopenAddCategorie();\n          setcategorietoadd(\"\");\n          setdataReady(false);\n          setcategorieTitle(res.data[\"name\"]);\n          setmeal(res.data);\n          setopenEdit(true);\n          setdataReady(true);\n        }\n      });\n  };\n  const closedEditMeal = () => {\n    setopenMealDetail(false);\n  };\n  const addIngrediantToNewMeal = async () => {\n    await setingrediantlistNew((prev) => [...prev, ingrediantToNewMeal]);\n    setopenaddMeal(false);\n    setingrediantToNewMeal(\"\");\n    setopenaddMeal(true);\n  };\n  const DoaddMeal = () => {\n    if (ingrediantlistNew.length > 0) {\n      const formData = new FormData();\n      formData.append(\"image\", selectedFileMeal);\n      formData.append(\"price\", mealtoAdd.price);\n      formData.append(\"discount\", mealtoAdd.discount);\n      formData.append(\"duration\", mealtoAdd.duration);\n      formData.append(\"name\", mealtoAdd.name);\n      formData.append(\"hotMeal\", false);\n      formData.append(\"description\", mealtoAdd.description);\n      ingrediantlistNew.forEach((e) => {\n        formData.append(\"ingrediants\", e);\n      });\n\n      console.log(ingrediantlistNew);\n      axios\n        .post(BaseUrl + \"/meal/create\", formData, {\n          headers: {\n            restaurantid: localStorage.getItem(\"restaurant_id\"),\n            categoryname: categorieTitle,\n          },\n        })\n        .then(async (res) => {\n          if (res.status == 201) {\n            doCloseAddMeal();\n            setmealtoAdd({});\n            setopenEdit(false);\n            setingrediantlistNew([]);\n            await setlistMeal((listMeal) => [...listMeal, res.data]);\n            setopenEdit(true);\n          }\n        });\n    } else {\n      seterroraddingrediant(true);\n    }\n  };\n  const openAddIngreDiantsToExistant = () => {\n    setaddIngrediantToExist(true);\n  };\n  return (\n    <div>\n      <h2 className=\"page-header\">Menu</h2>\n      <div className=\"row\">\n        <h3 className=\"page-header col-3\">Categories list</h3>\n        <button className=\"button col-2\" onClick={doOpenAddCategorie}>\n          Add Categorie\n        </button>\n      </div>\n      {openAddCategorie ? (\n        <div className=\"row\">\n          <div className=\"col-6\">\n            <div className=\"card\">\n              <label>Categorie name</label>\n              <br />\n              <Input\n                type=\"text\"\n                placeholder=\"Categorie\"\n                value={categorietoadd}\n                onChange={(e) => setcategorietoadd(e.target.value)}\n              />\n              <div className=\"row\">\n                <label className=\"col-6\">Categorie Image</label>\n              </div>\n              <br></br>\n              <input\n                className=\"col-6\"\n                type=\"file\"\n                onChange={handleFileSelect}\n              ></input>\n\n              <div className=\"row\">\n                <div className=\"col-3\">\n                  {\" \"}\n                  <button className=\"button col-12\" onClick={addCategorie}>\n                    submit\n                  </button>\n                </div>\n                <div className=\"col-3\">\n                  <button\n                    className=\"button col-12\"\n                    onClick={doCloseopenAddCategorie}\n                  >\n                    cancel\n                  </button>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      ) : (\n        <div></div>\n      )}\n\n      <div className=\"row\">\n        <div className=\"col-5\">\n          <div className=\"card\">\n            <div className=\"card__body\">\n              {dataReady ? (\n                <Table\n                  limit=\"10\"\n                  headData={customerTableHead}\n                  renderHead={(item, index) => renderHead(item, index)}\n                  bodyData={listCategories}\n                  renderBody={(item, index) => renderBody(item, index)}\n                />\n              ) : (\n                <div></div>\n              )}\n            </div>\n          </div>\n        </div>\n        <div className=\"col-6\">\n          {openMealDetail ? (\n            <div className=\"card\">\n              <div className=\"card__body\">\n                <div className=\"row\">\n                  <div className=\"col-4\">\n                    <h4>Meal name : </h4>\n                    <p>{meal.name}</p>\n                    <h4>Meal description : </h4>\n                    <p>{meal.description} </p>\n                    <h4>Meal price : </h4>\n                    <p>{meal.price} DT</p>\n                    <h4>Meal duration : </h4>\n                    <p>{meal.duration} min</p>\n                    <h4>Meal discount : </h4>\n                    <p>{meal.discount} %</p>\n                  </div>\n                  <div className=\"col-8\">\n                    <div className=\"row\">\n                      <div className=\"col-8\">\n                        {\" \"}\n                        <button\n                          onClick={doopeningrediantList}\n                          className=\"button col-8\"\n                        >\n                          toggle ingrediants\n                        </button>\n                      </div>\n                      <div className=\"col-4\">\n                        <button\n                          className=\"button col-8\"\n                          onClick={() => closedEditMeal()}\n                        >\n                          close\n                        </button>\n                      </div>\n                    </div>\n\n                    {openIngredientLis ? (\n                      <div>\n                        <br />{\" \"}\n                        <button\n                          className=\"button col-5\"\n                          onClick={openAddIngreDiantsToExistant}\n                        >\n                          add ingrediants\n                        </button>\n                        {addIngrediantToExist ? (\n                          <div>\n                            <br />\n                            <br />\n                            <Input type=\"text\" placeholder=\"Ingrediant\" />\n                            <button className=\"button col-5\">submit </button>\n                            <br />\n                            <br />\n                          </div>\n                        ) : (\n                          <div></div>\n                        )}\n                        <Table\n                          limit=\"10\"\n                          headData={ingrediantTableHead}\n                          renderHead={(item, index) =>\n                            renderIngrediantHead(item, index)\n                          }\n                          bodyData={ingrediantList}\n                          renderBody={(item, index) =>\n                            renderIngrediantBody(item, index)\n                          }\n                        />\n                      </div>\n                    ) : (\n                      <div></div>\n                    )}\n                  </div>\n                </div>\n              </div>\n            </div>\n          ) : (\n            <div></div>\n          )}\n          {openEdit ? (\n            <div className=\"card\">\n              <div className=\"card__body\">\n                <h3>{categorieTitle}</h3>\n                <br></br>\n                <div className=\"row\">\n                  <div className=\"col-6\">\n                    <h4>Meals list :</h4>\n                  </div>\n                  <div className=\"col-6\">\n                    <div className=\"row\">\n                      <button className=\"button col-5\" onClick={doOpenAddMeal}>\n                        Add Meal\n                      </button>\n                      <div className=\"col-1\"></div>\n                      <button className=\"button col-4\">Delete</button>\n                    </div>\n                  </div>\n                </div>\n                {openaddMeal ? (\n                  <div className=\"col-12\">\n                    <div className=\"row\">\n                      <div className=\"col-6\">\n                        <br />\n\n                        <label>Meal name</label>\n                        <br />\n                        <br />\n                        <Input\n                          type=\"text\"\n                          placeholder=\"Meal name\"\n                          value={mealtoAdd.name}\n                          onChange={(e) =>\n                            setmealtoAdd((prev) => ({\n                              name: e.target.value,\n                            }))\n                          }\n                        />\n                        <br />\n\n                        <label>Meal description</label>\n                        <br />\n                        <br />\n                        <Input\n                          type=\"text\"\n                          placeholder=\"Meal description\"\n                          value={mealtoAdd.description}\n                          onChange={(e) =>\n                            setmealtoAdd((prev) => ({\n                              name: prev.name,\n                              description: e.target.value,\n                            }))\n                          }\n                        />\n\n                        <label>\n                          <br />\n\n                          <label>Meal price</label>\n                          <br />\n                          <br />\n                          <Input\n                            type=\"number\"\n                            placeholder=\"Meal price\"\n                            value={mealtoAdd.price}\n                            onChange={(e) =>\n                              setmealtoAdd((prev) => ({\n                                name: prev.name,\n                                description: prev.description,\n                                price: e.target.value,\n                              }))\n                            }\n                          />\n                        </label>\n                        <br />\n\n                        <label>Meal duration</label>\n                        <br />\n                        <br />\n\n                        <Input\n                          type=\"number\"\n                          placeholder=\"Meal duration\"\n                          value={mealtoAdd.duration}\n                          onChange={(e) =>\n                            setmealtoAdd((prev) => ({\n                              name: prev.name,\n                              description: prev.description,\n                              price: prev.price,\n                              duration: e.target.value,\n                            }))\n                          }\n                        />\n                        <br />\n\n                        <label>Meal discount</label>\n                        <br />\n                        <br />\n\n                        <Input\n                          type=\"number\"\n                          placeholder=\"Meal discount\"\n                          value={mealtoAdd.discount}\n                          onChange={(e) =>\n                            setmealtoAdd((prev) => ({\n                              name: prev.name,\n                              description: prev.description,\n                              price: prev.price,\n                              duration: prev.duration,\n                              discount: e.target.value,\n                            }))\n                          }\n                        />\n\n                        <br></br>\n                        <div className=\"row\">\n                          <input\n                            className=\"col-6\"\n                            type=\"file\"\n                            onChange={handleFileSelectMeal}\n                          ></input>\n                        </div>\n                        {erroraddingrediant ? (\n                          <p className=\"error\">\n                            You should at least add one ingrediant\n                          </p>\n                        ) : (\n                          <div></div>\n                        )}\n                      </div>\n                      <div className=\"col-6\">\n                        <br />\n                        <h3>Ingrediants</h3>\n                        <br />\n                        <Input\n                          type=\"text\"\n                          placeholder=\"Ingrediant\"\n                          value={ingrediantToNewMeal}\n                          onChange={(e) =>\n                            setingrediantToNewMeal(e.target.value)\n                          }\n                        />\n                        <button\n                          className=\"button col-8\"\n                          onClick={addIngrediantToNewMeal}\n                        >\n                          Add Ingrediants\n                        </button>\n                        <br />\n                        <br />\n\n                        <Table\n                          limit=\"10\"\n                          headData={ingrediantTableHead}\n                          renderHead={(item, index) =>\n                            renderIngrediantHead(item, index)\n                          }\n                          bodyData={ingrediantlistNew}\n                          renderBody={(item, index) =>\n                            renderIngrediantBody(item, index)\n                          }\n                        />\n                      </div>\n                      <br></br>\n                    </div>\n                    <br></br>\n\n                    <div className=\"row\">\n                      <div className=\"col-3\">\n                        {\" \"}\n                        <button className=\"button col-12\" onClick={DoaddMeal}>\n                          submit\n                        </button>\n                      </div>\n                      <div className=\"col-3\">\n                        <button\n                          className=\"button col-12\"\n                          onClick={doCloseAddMeal}\n                        >\n                          cancel\n                        </button>\n                      </div>\n                    </div>\n                  </div>\n                ) : (\n                  <div></div>\n                )}\n\n                <br />\n                {dataReady ? (\n                  <Table\n                    limit=\"10\"\n                    headData={mealTableHead}\n                    renderHead={(item, index) => renderHead(item, index)}\n                    bodyData={listMeal}\n                    renderBody={(item, index) => renderMealBody(item, index)}\n                  />\n                ) : (\n                  <div></div>\n                )}\n              </div>\n            </div>\n          ) : (\n            <div></div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\nexport default Menu;\n","C:\\Users\\ahmed\\OneDrive\\Bureau\\4SIM4\\PIM\\PimBackOfficReact-master\\src\\pages\\Resto\\Resto.jsx",["132","133","134","135","136","137","138","139"],"import React from \"react\";\nimport axios from \"axios\";\nimport { BaseUrl } from \"../../helpers/base_url\";\nimport { useState } from \"react\";\nimport { Input } from \"../Login/LoginElements\";\n\nimport GoogleMapReact from \"google-map-react\";\nconst AnyReactComponent = ({ text }) => <div>{text}</div>;\nconst Resto = () => {\n  const data = new FormData();\n  const [openupdate, setopenupdate] = useState(false);\n  const [imgUpdate, setimgUpdate] = useState({});\n  const [openEdit, setopenEdit] = useState(false);\n  const [dataReady, setdataReady] = useState(false);\n  const [restoData, setrestoData] = useState({\n    name: \"\",\n    description: \"\",\n    location: [],\n    speciality: \"\",\n    image: \"\",\n  });\n  const [restoDataEdit, setrestoDataEdit] = useState({\n    name: \"\",\n    description: \"\",\n    location: [],\n    speciality: \"\",\n    image: \"\",\n  });\n  const openEditRestofore = async (restaurant) => {\n    setopenEdit(false);\n    await setrestoData(restaurant);\n    setopenEdit(true);\n  };\n  const UpdateRestau = async () => {\n    data.append(\"image\", imgUpdate);\n    data.append(\"name\", restoDataEdit.name);\n    data.append(\"description\", restoDataEdit.description);\n    data.append(\"speciality\", restoDataEdit.speciality);\n    console.log(restoDataEdit);\n    await axios\n      .put(BaseUrl + \"/restaurant/update\", data, {\n        headers: {\n          restaurantId: localStorage.getItem(\"restaurant_id\"),\n        },\n      })\n      .then(async (res) => {\n        if (res.status == 201) {\n          doCloseupdate();\n          setrestoData({});\n          setopenEdit(false);\n          //await setrestoData((restoData) => [...restoData, res.data]);\n          setopenEdit(true);\n        }\n      });\n  };\n  React.useEffect(async () => {\n    await axios\n      .get(BaseUrl + \"/restaurant/\", {\n        headers: {\n          idrestaurant: localStorage.getItem(\"restaurant_id\"),\n        },\n      })\n      .then((response) => {\n        //   console.log(response.data);\n        if (response.status == 200) {\n          console.log(response.data);\n          setdataReady(true);\n          setrestoData(response.data);\n        }\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }, []);\n  const doCloseupdate = () => {\n    console.log(\"aaa\");\n    setopenEdit(false);\n  };\n  return (\n    <div>\n      {dataReady ? (\n        <div className=\"card col-8\">\n          <div className=\"row\">\n            <div className=\"col-3\"></div>\n            <img\n              src={restoData.image}\n              style={{ height: \"250px\", width: \"250px\" }}\n            />\n          </div>\n\n          <br></br>\n\n          <h3>Restaurant Name :</h3>\n          <div> {restoData.name} </div>\n          <br></br>\n          <h3>Restaurant Description :</h3>\n          <div> {restoData.description} </div>\n          <br></br>\n          <h3>Restaurant Speciality :</h3>\n\n          <div> {restoData.speciality} </div>\n          <br></br>\n          <button\n            onClick={() => openEditRestofore(restoData)}\n            className=\"button col-2\"\n          >\n            Edit\n          </button>\n          <br></br>\n        </div>\n      ) : (\n        <div></div>\n      )}\n      {openEdit ? (\n        <div className=\"card col-8\">\n          <br />\n\n          <label>Restaurant name</label>\n          <br />\n          <br />\n          <Input\n            type=\"text\"\n            placeholder=\"Restaurant name\"\n            value={restoDataEdit[\"name\"]}\n            onChange={(e) => setrestoDataEdit({ name: e.target.value })}\n          />\n          <br />\n\n          <label>Restaurant description</label>\n          <br />\n          <br />\n          <Input\n            type=\"text\"\n            placeholder=\"Restaurant description\"\n            value={restoDataEdit.description}\n            onChange={(e) =>\n              setrestoDataEdit((prev) => ({\n                name: prev.name,\n                description: e.target.value,\n              }))\n            }\n          />\n\n          <label>\n            <br />\n\n            <label>Restaurant speciality</label>\n            <br />\n            <br />\n            <Input\n              type=\"text\"\n              placeholder=\"Restaurant speciality\"\n              value={restoDataEdit.speciality}\n              onChange={(e) =>\n                setrestoDataEdit((prev) => ({\n                  name: prev.name,\n                  description: prev.description,\n                  speciality: e.target.value,\n                }))\n              }\n            />\n          </label>\n          <br />\n          <label>\n            Restaurant picture\n            <br />\n            <br />\n            <input\n              type=\"file\"\n              name=\"image\"\n              onChange={(e) => {\n                console.log(\"image\", e.target.files[0]);\n                setimgUpdate(e.target.files[0]);\n              }}\n            />\n          </label>\n          <div className=\"row\">\n            <div className=\"col-3\">\n              {\" \"}\n              <button className=\"button col-12\" onClick={UpdateRestau}>\n                Update\n              </button>\n            </div>\n            <div className=\"col-3\">\n              <button className=\"button col-12\" onClick={doCloseupdate}>\n                cancel\n              </button>\n            </div>\n          </div>\n        </div>\n      ) : (\n        <div></div>\n      )}\n    </div>\n  );\n};\n\nexport default Resto;\n","C:\\Users\\ahmed\\OneDrive\\Bureau\\4SIM4\\PIM\\PimBackOfficReact-master\\src\\pages\\Finance\\Finance.jsx",[],"C:\\Users\\ahmed\\OneDrive\\Bureau\\4SIM4\\PIM\\PimBackOfficReact-master\\src\\pages\\NFT\\NFT.jsx",[],"C:\\Users\\ahmed\\OneDrive\\Bureau\\4SIM4\\PIM\\PimBackOfficReact-master\\src\\components\\thememenu\\ThemeMenu.jsx",[],"C:\\Users\\ahmed\\OneDrive\\Bureau\\4SIM4\\PIM\\PimBackOfficReact-master\\src\\components\\dropdown\\Dropdown.jsx",[],"C:\\Users\\ahmed\\OneDrive\\Bureau\\4SIM4\\PIM\\PimBackOfficReact-master\\src\\components\\status-card\\StatusCard.jsx",[],"C:\\Users\\ahmed\\OneDrive\\Bureau\\4SIM4\\PIM\\PimBackOfficReact-master\\src\\components\\table\\Table.jsx",[],"C:\\Users\\ahmed\\OneDrive\\Bureau\\4SIM4\\PIM\\PimBackOfficReact-master\\src\\components\\badge\\Badge.jsx",[],{"ruleId":"140","severity":1,"message":"141","line":17,"column":10,"nodeType":"142","messageId":"143","endLine":17,"endColumn":27},{"ruleId":"140","severity":1,"message":"144","line":20,"column":10,"nodeType":"142","messageId":"143","endLine":20,"endColumn":20},{"ruleId":"145","replacedBy":"146"},{"ruleId":"147","replacedBy":"148"},{"ruleId":"149","severity":1,"message":"150","line":18,"column":24,"nodeType":"151","messageId":"152","endLine":18,"endColumn":26},{"ruleId":"149","severity":1,"message":"150","line":28,"column":24,"nodeType":"151","messageId":"152","endLine":28,"endColumn":26},{"ruleId":"149","severity":1,"message":"150","line":33,"column":12,"nodeType":"151","messageId":"152","endLine":33,"endColumn":14},{"ruleId":"149","severity":1,"message":"150","line":35,"column":18,"nodeType":"151","messageId":"152","endLine":35,"endColumn":20},{"ruleId":"140","severity":1,"message":"153","line":40,"column":11,"nodeType":"142","messageId":"143","endLine":40,"endColumn":26},{"ruleId":"154","severity":1,"message":"155","line":25,"column":19,"nodeType":"156","endLine":46,"endColumn":4},{"ruleId":"154","severity":1,"message":"157","line":46,"column":6,"nodeType":"158","endLine":46,"endColumn":8,"suggestions":"159"},{"ruleId":"149","severity":1,"message":"150","line":74,"column":14,"nodeType":"151","messageId":"152","endLine":74,"endColumn":16},{"ruleId":"140","severity":1,"message":"160","line":1,"column":17,"nodeType":"142","messageId":"143","endLine":1,"endColumn":26},{"ruleId":"140","severity":1,"message":"161","line":18,"column":8,"nodeType":"142","messageId":"143","endLine":18,"endColumn":19},{"ruleId":"149","severity":1,"message":"162","line":173,"column":36,"nodeType":"151","messageId":"152","endLine":173,"endColumn":38},{"ruleId":"154","severity":1,"message":"155","line":178,"column":19,"nodeType":"156","endLine":202,"endColumn":4},{"ruleId":"149","severity":1,"message":"150","line":190,"column":28,"nodeType":"151","messageId":"152","endLine":190,"endColumn":30},{"ruleId":"140","severity":1,"message":"163","line":36,"column":9,"nodeType":"142","messageId":"143","endLine":36,"endColumn":20},{"ruleId":"154","severity":1,"message":"155","line":37,"column":19,"nodeType":"156","endLine":59,"endColumn":4},{"ruleId":"140","severity":1,"message":"164","line":60,"column":9,"nodeType":"142","messageId":"143","endLine":60,"endColumn":23},{"ruleId":"149","severity":1,"message":"162","line":65,"column":25,"nodeType":"151","messageId":"152","endLine":65,"endColumn":27},{"ruleId":"149","severity":1,"message":"162","line":122,"column":36,"nodeType":"151","messageId":"152","endLine":122,"endColumn":38},{"ruleId":"154","severity":1,"message":"155","line":126,"column":19,"nodeType":"156","endLine":140,"endColumn":4},{"ruleId":"149","severity":1,"message":"150","line":162,"column":24,"nodeType":"151","messageId":"152","endLine":162,"endColumn":26},{"ruleId":"149","severity":1,"message":"150","line":206,"column":26,"nodeType":"151","messageId":"152","endLine":206,"endColumn":28},{"ruleId":"140","severity":1,"message":"165","line":7,"column":8,"nodeType":"142","messageId":"143","endLine":7,"endColumn":22},{"ruleId":"140","severity":1,"message":"166","line":8,"column":7,"nodeType":"142","messageId":"143","endLine":8,"endColumn":24},{"ruleId":"140","severity":1,"message":"167","line":11,"column":10,"nodeType":"142","messageId":"143","endLine":11,"endColumn":20},{"ruleId":"140","severity":1,"message":"168","line":11,"column":22,"nodeType":"142","messageId":"143","endLine":11,"endColumn":35},{"ruleId":"149","severity":1,"message":"150","line":47,"column":24,"nodeType":"151","messageId":"152","endLine":47,"endColumn":26},{"ruleId":"154","severity":1,"message":"155","line":56,"column":19,"nodeType":"156","endLine":74,"endColumn":4},{"ruleId":"149","severity":1,"message":"150","line":65,"column":29,"nodeType":"151","messageId":"152","endLine":65,"endColumn":31},{"ruleId":"169","severity":1,"message":"170","line":85,"column":13,"nodeType":"171","endLine":88,"endColumn":15},"no-unused-vars","'Web3ReactProvider' is defined but never used.","Identifier","unusedVar","'getLibrary' is defined but never used.","no-native-reassign",["172"],"no-negated-in-lhs",["173"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'activeItemOwner' is assigned a value but never used.","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook React.useEffect has a missing dependency: 'notifNumber'. Either include it or remove the dependency array. You can also do a functional update 'setnotifNumber(n => ...)' if you only need 'notifNumber' in the 'setnotifNumber' call.","ArrayExpression",["174"],"'useEffect' is defined but never used.","'statusCards' is defined but never used.","Expected '!==' and instead saw '!='.","'getmealbyId' is assigned a value but never used.","'renderNewOrder' is assigned a value but never used.","'GoogleMapReact' is defined but never used.","'AnyReactComponent' is assigned a value but never used.","'openupdate' is assigned a value but never used.","'setopenupdate' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"175","fix":"176"},"Update the dependencies array to be: [notifNumber]",{"range":"177","text":"178"},[1286,1288],"[notifNumber]"]