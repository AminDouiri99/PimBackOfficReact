<<<<<<< HEAD
[{"C:\\Users\\Planete Gaming\\Desktop\\react\\src\\index.js":"1","C:\\Users\\Planete Gaming\\Desktop\\react\\src\\reportWebVitals.js":"2","C:\\Users\\Planete Gaming\\Desktop\\react\\src\\components\\layout\\Layout.jsx":"3","C:\\Users\\Planete Gaming\\Desktop\\react\\src\\redux\\reducers\\index.js":"4","C:\\Users\\Planete Gaming\\Desktop\\react\\src\\redux\\actions\\ThemeAction.js":"5","C:\\Users\\Planete Gaming\\Desktop\\react\\src\\pages\\Login\\login.js":"6","C:\\Users\\Planete Gaming\\Desktop\\react\\src\\components\\Routes.jsx":"7","C:\\Users\\Planete Gaming\\Desktop\\react\\src\\components\\topnav\\TopNav.jsx":"8","C:\\Users\\Planete Gaming\\Desktop\\react\\src\\components\\sidebar\\Sidebar.jsx":"9","C:\\Users\\Planete Gaming\\Desktop\\react\\src\\redux\\reducers\\ThemeReducer.js":"10","C:\\Users\\Planete Gaming\\Desktop\\react\\src\\pages\\Login\\LoginElements.js":"11","C:\\Users\\Planete Gaming\\Desktop\\react\\src\\pages\\Dashboard.jsx":"12","C:\\Users\\Planete Gaming\\Desktop\\react\\src\\helpers\\base_url.jsx":"13","C:\\Users\\Planete Gaming\\Desktop\\react\\src\\pages\\Customers.jsx":"14","C:\\Users\\Planete Gaming\\Desktop\\react\\src\\pages\\Menues\\Menu.jsx":"15","C:\\Users\\Planete Gaming\\Desktop\\react\\src\\pages\\Orders\\Orders.jsx":"16","C:\\Users\\Planete Gaming\\Desktop\\react\\src\\components\\dropdown\\Dropdown.jsx":"17","C:\\Users\\Planete Gaming\\Desktop\\react\\src\\components\\thememenu\\ThemeMenu.jsx":"18","C:\\Users\\Planete Gaming\\Desktop\\react\\src\\components\\status-card\\StatusCard.jsx":"19","C:\\Users\\Planete Gaming\\Desktop\\react\\src\\components\\badge\\Badge.jsx":"20","C:\\Users\\Planete Gaming\\Desktop\\react\\src\\components\\table\\Table.jsx":"21","C:\\Users\\Planete Gaming\\Desktop\\react\\src\\pages\\Resto\\Resto.jsx":"22"},{"size":933,"mtime":1646506808963,"results":"23","hashOfConfig":"24"},{"size":375,"mtime":1646506808967,"results":"25","hashOfConfig":"24"},{"size":1617,"mtime":1646506808958,"results":"26","hashOfConfig":"24"},{"size":167,"mtime":1646506808967,"results":"27","hashOfConfig":"24"},{"size":390,"mtime":1646506808966,"results":"28","hashOfConfig":"24"},{"size":2025,"mtime":1646506808964,"results":"29","hashOfConfig":"24"},{"size":800,"mtime":1646509303632,"results":"30","hashOfConfig":"24"},{"size":2787,"mtime":1646506808962,"results":"31","hashOfConfig":"24"},{"size":1696,"mtime":1646506808959,"results":"32","hashOfConfig":"24"},{"size":416,"mtime":1646506808966,"results":"33","hashOfConfig":"24"},{"size":1401,"mtime":1646506808964,"results":"34","hashOfConfig":"24"},{"size":7399,"mtime":1646506808964,"results":"35","hashOfConfig":"24"},{"size":47,"mtime":1646506808963,"results":"36","hashOfConfig":"24"},{"size":1543,"mtime":1646506808963,"results":"37","hashOfConfig":"24"},{"size":14077,"mtime":1646506808965,"results":"38","hashOfConfig":"24"},{"size":4013,"mtime":1646506808965,"results":"39","hashOfConfig":"24"},{"size":1872,"mtime":1646506808958,"results":"40","hashOfConfig":"24"},{"size":5057,"mtime":1646506808961,"results":"41","hashOfConfig":"24"},{"size":467,"mtime":1646506808960,"results":"42","hashOfConfig":"24"},{"size":229,"mtime":1646506808957,"results":"43","hashOfConfig":"24"},{"size":2477,"mtime":1646506808961,"results":"44","hashOfConfig":"24"},{"size":6358,"mtime":1646600932368,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"b3vpbo",{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"48"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"48"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"48"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"48"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"48"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"48"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Planete Gaming\\Desktop\\react\\src\\index.js",[],["97","98"],"C:\\Users\\Planete Gaming\\Desktop\\react\\src\\reportWebVitals.js",[],"C:\\Users\\Planete Gaming\\Desktop\\react\\src\\components\\layout\\Layout.jsx",[],"C:\\Users\\Planete Gaming\\Desktop\\react\\src\\redux\\reducers\\index.js",[],"C:\\Users\\Planete Gaming\\Desktop\\react\\src\\redux\\actions\\ThemeAction.js",[],"C:\\Users\\Planete Gaming\\Desktop\\react\\src\\pages\\Login\\login.js",["99","100"],"import React ,{useState}from 'react';\r\nimport { Wrapper,Form ,Input,Button, Title} from './LoginElements';\r\nimport { BaseUrl } from '../../helpers/base_url';\r\nimport axios from 'axios';\r\nimport { useHistory } from \"react-router-dom\";\r\nconst Login=()=>{\r\n    const [email,setEmail] = useState('');\r\n    const [password,setPassword] = useState('');\r\n    const history = useHistory();\r\n    const doTheLogin= async() =>  {\r\n      await axios.post(\r\n        BaseUrl + \"/employe/login\",\r\n        {\r\n          email: email ,\r\n          password: password\r\n        }\r\n      ).then((res) => {\r\n        if (res.status == 200) {\r\n          localStorage.setItem('auth',true);\r\n          localStorage.setItem('id',res.data['employe']['_id']);\r\n          localStorage.setItem('firstname',res.data['employe']['firstName']);\r\n          localStorage.setItem('lastname',res.data['employe']['lastName']);\r\n          localStorage.setItem('email',res.data['employe']['email']);\r\n          localStorage.setItem('restaurant_id',res.data['employe']['restaurant']);\r\n          localStorage.setItem('role',res.data['employe']['role']);\r\n          history.push(\"/\");\r\n        }\r\n        if (res.status == 422)\r\n        {\r\n          alert(`Invalid email or password`);\r\n        }\r\n        console.log(res);\r\n      });\r\n    }\r\n    const handleSubmit = event => {\r\n      event.preventDefault();\r\n      doTheLogin();\r\n    };\r\n    return <>\r\n  <Wrapper>\r\n        <Form onSubmit={handleSubmit}>\r\n            <Title>Welcome</Title>\r\n          <Input\r\n            type=\"email\"\r\n            name=\"email\"\r\n            onChange={e=>setEmail(e.target.value)}\r\n            placeholder='email'\r\n            value={email}\r\n          />\r\n          <Input\r\n          onChange={e=>setPassword(e.target.value)}\r\n            type=\"password\"\r\n            name=\"password\"\r\n            placeholder='password'\r\n            value={password}\r\n          />\r\n          <Button type=\"submit\">Login</Button>\r\n        </Form>\r\n      </Wrapper>\r\n    </>\r\n};  \r\nexport default Login;\r\n","C:\\Users\\Planete Gaming\\Desktop\\react\\src\\components\\Routes.jsx",[],"C:\\Users\\Planete Gaming\\Desktop\\react\\src\\components\\topnav\\TopNav.jsx",["101"],"import React from 'react'\r\n\r\nimport './topnav.css'\r\n\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport Dropdown from '../dropdown/Dropdown'\r\n\r\nimport ThemeMenu from '../thememenu/ThemeMenu'\r\n\r\nimport notifications from '../../assets/JsonData/notification.json'\r\n\r\nimport user_image from '../../assets/images/tuat.png'\r\n\r\nimport user_menu from '../../assets/JsonData/user_menus.json'\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst Topnav = () => {\r\n    \r\nconst curr_user = {\r\n    display_name: localStorage.getItem('firstname') + ' '+ localStorage.getItem('lastname'),\r\n    image: user_image\r\n}\r\n\r\nconst renderNotificationItem = (item, index) => (\r\n    <div className=\"notification-item\" key={index}>\r\n        <i className={item.icon}></i>\r\n        <span>{item.content}</span>\r\n    </div>\r\n)\r\n\r\nconst renderUserToggle = (user) => (\r\n    <div className=\"topnav__right-user\">\r\n        <div className=\"topnav__right-user__image\">\r\n            <img src={user.image} alt=\"\" />\r\n        </div>\r\n        <div className=\"topnav__right-user__name\">\r\n            {user.display_name}\r\n        </div>\r\n    </div>\r\n)\r\nconst history = useHistory();\r\n\r\nconst actionMenu = (item)=>{\r\n    console.log(\"aaaaaa\")\r\n    if(item==\"Logout\"){\r\n        localStorage.clear()\r\n        history.push('/login')\r\n    }\r\n}\r\nconst renderUserMenu =(item, index) => (\r\n    <Link  key={index} onClick={()=>actionMenu(item.content)}>\r\n        <div className=\"notification-item\">\r\n            <i className={item.icon}></i>\r\n            <span>{item.content}</span>\r\n        </div>\r\n    </Link>\r\n)\r\n\r\n    return (\r\n        <div className='topnav'>\r\n            <div className=\"topnav__search\">\r\n              \r\n            </div>\r\n            <div className=\"topnav__right\">\r\n                <div className=\"topnav__right-item\">\r\n                    {/* dropdown here */}\r\n                    <Dropdown\r\n                        customToggle={() => renderUserToggle(curr_user)}\r\n                        contentData={user_menu}\r\n                        renderItems={(item, index) => renderUserMenu(item, index)}\r\n                    />\r\n                </div>\r\n                <div className=\"topnav__right-item\">\r\n                    <Dropdown\r\n                        icon='bx bx-bell'\r\n                        badge='12'\r\n                        contentData={notifications}\r\n                        renderItems={(item, index) => renderNotificationItem(item, index)}\r\n                        renderFooter={() => <Link to='/'>View All</Link>}\r\n                    />\r\n                    {/* dropdown here */}\r\n                </div>\r\n                <div className=\"topnav__right-item\">\r\n                    <ThemeMenu/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Topnav\r\n","C:\\Users\\Planete Gaming\\Desktop\\react\\src\\components\\sidebar\\Sidebar.jsx",["102","103","104"],"import React from 'react'\r\n\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport './sidebar.css'\r\n\r\nimport logo from '../../assets/images/LEDYLOGO.png'\r\n\r\nimport sidebar_items from '../../assets/JsonData/sidebar_routes.json'\r\n\r\nimport sidebar_items_owner from '../../assets/JsonData/sidebar_routes.json'\r\n\r\n\r\nconst SidebarItem = props => {\r\n\r\n    const active = props.active ? 'active' : ''\r\n\r\n    return (\r\n        <div className=\"sidebar__item\">\r\n            <div className={`sidebar__item-inner ${active}`}>\r\n                <i className={props.icon}></i>\r\n                <span>\r\n                    {props.title}\r\n                </span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst Sidebar = props => {\r\n    let role = \"waiter\"\r\n    let items =[];\r\n    if(role==\"waiter\"){\r\n        items=sidebar_items\r\n    }else if(role==\"owner\"){\r\n        items=sidebar_items_owner\r\n    }\r\n\r\n    const activeItem = items.findIndex(item => item.route === props.location.pathname)\r\n    const activeItemOwner = items.findIndex(item=>item.route===props.location.pathname)\r\n    return (\r\n        <div className='sidebar'>\r\n            <div className=\"sidebar__logo\">\r\n                <img src={logo} alt=\"company logo\" />\r\n            </div>\r\n            {\r\n                items.map((item, index) => (\r\n                    <Link to={item.route} key={index}>\r\n                        <SidebarItem\r\n                            title={item.display_name}\r\n                            icon={item.icon}\r\n                            active={index === activeItem}\r\n                        />\r\n                    </Link>\r\n                ))\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Sidebar\r\n","C:\\Users\\Planete Gaming\\Desktop\\react\\src\\redux\\reducers\\ThemeReducer.js",[],"C:\\Users\\Planete Gaming\\Desktop\\react\\src\\pages\\Login\\LoginElements.js",[],"C:\\Users\\Planete Gaming\\Desktop\\react\\src\\pages\\Dashboard.jsx",["105","106"],"import React, {useEffect} from 'react'\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport Chart from 'react-apexcharts'\r\n\r\nimport { useSelector } from 'react-redux'\r\n\r\nimport StatusCard from '../components/status-card/StatusCard'\r\n\r\nimport Table from '../components/table/Table'\r\n\r\nimport Badge from '../components/badge/Badge'\r\n\r\nimport statusCards from '../assets/JsonData/status-card-data.json'\r\n\r\nconst chartOptions = {\r\n    series: [{\r\n        name: 'Online Customers',\r\n        data: [40,70,20,90,36,80,30,91,60]\r\n    }, {\r\n        name: 'Store Customers',\r\n        data: [40, 30, 70, 80, 40, 16, 40, 20, 51, 10]\r\n    }],\r\n    options: {\r\n        color: ['#6ab04c', '#2980b9'],\r\n        chart: {\r\n            background: 'transparent'\r\n        },\r\n        dataLabels: {\r\n            enabled: false\r\n        },\r\n        stroke: {\r\n            curve: 'smooth'\r\n        },\r\n        xaxis: {\r\n            categories: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep']\r\n        },\r\n        legend: {\r\n            position: 'top'\r\n        },\r\n        grid: {\r\n            show: false\r\n        }\r\n    }\r\n}\r\n\r\nconst topCustomers = {\r\n    head: [\r\n        'user',\r\n        'total orders',\r\n        'total spending'\r\n    ],\r\n    body: [\r\n        {\r\n            \"username\": \"john doe\",\r\n            \"order\": \"490\",\r\n            \"price\": \"$15,870\"\r\n        },\r\n        {\r\n            \"username\": \"frank iva\",\r\n            \"order\": \"250\",\r\n            \"price\": \"$12,251\"\r\n        },\r\n        {\r\n            \"username\": \"anthony baker\",\r\n            \"order\": \"120\",\r\n            \"price\": \"$10,840\"\r\n        },\r\n        {\r\n            \"username\": \"frank iva\",\r\n            \"order\": \"110\",\r\n            \"price\": \"$9,251\"\r\n        },\r\n        {\r\n            \"username\": \"anthony baker\",\r\n            \"order\": \"80\",\r\n            \"price\": \"$8,840\"\r\n        }\r\n    ]\r\n}\r\n\r\nconst renderCusomerHead = (item, index) => (\r\n    <th key={index}>{item}</th>\r\n)\r\n\r\nconst renderCusomerBody = (item, index) => (\r\n    <tr key={index}>\r\n        <td>{item.username}</td>\r\n        <td>{item.order}</td>\r\n        <td>{item.price}</td>\r\n    </tr>\r\n)\r\n\r\nconst latestOrders = {\r\n    header: [\r\n        \"order id\",\r\n        \"user\",\r\n        \"total price\",\r\n        \"date\",\r\n        \"status\"\r\n    ],\r\n    body: [\r\n        {\r\n            id: \"#OD1711\",\r\n            user: \"john doe\",\r\n            date: \"17 Jun 2021\",\r\n            price: \"$900\",\r\n            status: \"shipping\"\r\n        },\r\n        {\r\n            id: \"#OD1712\",\r\n            user: \"frank iva\",\r\n            date: \"1 Jun 2021\",\r\n            price: \"$400\",\r\n            status: \"paid\"\r\n        },\r\n        {\r\n            id: \"#OD1713\",\r\n            user: \"anthony baker\",\r\n            date: \"27 Jun 2021\",\r\n            price: \"$200\",\r\n            status: \"pending\"\r\n        },\r\n        {\r\n            id: \"#OD1712\",\r\n            user: \"frank iva\",\r\n            date: \"1 Jun 2021\",\r\n            price: \"$400\",\r\n            status: \"paid\"\r\n        },\r\n        {\r\n            id: \"#OD1713\",\r\n            user: \"anthony baker\",\r\n            date: \"27 Jun 2021\",\r\n            price: \"$200\",\r\n            status: \"refund\"\r\n        }\r\n    ]\r\n}\r\n\r\nconst orderStatus = {\r\n    \"shipping\": \"primary\",\r\n    \"pending\": \"warning\",\r\n    \"paid\": \"success\",\r\n    \"refund\": \"danger\"\r\n}\r\n\r\nconst renderOrderHead = (item, index) => (\r\n    <th key={index}>{item}</th>\r\n)\r\n\r\nconst renderOrderBody = (item, index) => (\r\n    <tr key={index}>\r\n        <td>{item.id}</td>\r\n        <td>{item.user}</td>\r\n        <td>{item.price}</td>\r\n        <td>{item.date}</td>\r\n        <td>\r\n            <Badge type={orderStatus[item.status]} content={item.status}/>\r\n        </td>\r\n    </tr>\r\n)\r\n\r\nconst Dashboard = () => {\r\n    const history = useHistory();\r\n    if ( localStorage.getItem(\"auth\") != \"true\" ) //check condition\r\n    {\r\n        history.push(\"/login\");\r\n    }\r\n    const themeReducer = useSelector(state => state.ThemeReducer.mode)\r\n\r\n    return (\r\n        <div>\r\n            <h2 className=\"page-header\">Dashboard</h2>\r\n            <div className=\"row\">\r\n                <div className=\"col-6\">\r\n                    <div className=\"row\">\r\n                        {\r\n                            statusCards.map((item, index) => (\r\n                                <div className=\"col-6\" key={index}>\r\n                                    <StatusCard\r\n                                        icon={item.icon}\r\n                                        count={item.count}\r\n                                        title={item.title}\r\n                                    />\r\n                                </div>\r\n                            ))\r\n                        }\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-6\">\r\n                    <div className=\"card full-height\">\r\n                        {/* chart */}\r\n                        <Chart\r\n                            options={themeReducer === 'theme-mode-dark' ? {\r\n                                ...chartOptions.options,\r\n                                theme: { mode: 'dark'}\r\n                            } : {\r\n                                ...chartOptions.options,\r\n                                theme: { mode: 'light'}\r\n                            }}\r\n                            series={chartOptions.series}\r\n                            type='line'\r\n                            height='100%'\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-4\">\r\n                    <div className=\"card\">\r\n                        <div className=\"card__header\">\r\n                            <h3>top customers</h3>\r\n                        </div>\r\n                        <div className=\"card__body\">\r\n                            <Table\r\n                                headData={topCustomers.head}\r\n                                renderHead={(item, index) => renderCusomerHead(item, index)}\r\n                                bodyData={topCustomers.body}\r\n                                renderBody={(item, index) => renderCusomerBody(item, index)}\r\n                            />\r\n                        </div>\r\n                        <div className=\"card__footer\">\r\n                            <Link to='/'>view all</Link>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-8\">\r\n                    <div className=\"card\">\r\n                        <div className=\"card__header\">\r\n                            <h3>latest orders</h3>\r\n                        </div>\r\n                        <div className=\"card__body\">\r\n                            <Table\r\n                                headData={latestOrders.header}\r\n                                renderHead={(item, index) => renderOrderHead(item, index)}\r\n                                bodyData={latestOrders.body}\r\n                                renderBody={(item, index) => renderOrderBody(item, index)}\r\n                            />\r\n                        </div>\r\n                        <div className=\"card__footer\">\r\n                            <Link to='/'>view all</Link>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dashboard\r\n","C:\\Users\\Planete Gaming\\Desktop\\react\\src\\helpers\\base_url.jsx",[],"C:\\Users\\Planete Gaming\\Desktop\\react\\src\\pages\\Customers.jsx",[],"C:\\Users\\Planete Gaming\\Desktop\\react\\src\\pages\\Menues\\Menu.jsx",["107","108","109","110"],"import React, { useState } from \"react\";\r\nimport { Input } from \"../Login/LoginElements\";\r\nimport axios from \"axios\";\r\nimport { BaseUrl } from \"../../helpers/base_url\";\r\nimport Table from \"../../components/table/Table\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst Menu = () => {\r\n  const [openAddCategorie, setopenAddCategorie] = useState(false);\r\n  const [categorietoadd, setcategorietoadd] = useState(\"\");\r\n  const [listCategories, setlistCategories] = useState([]);\r\n  const [listMeal, setlistMeal] = useState([]);\r\n  const [categorieTitle, setcategorieTitle] = useState(\"\");\r\n  const [openEdit, setopenEdit] = useState(false);\r\n  const [dataReady, setdataReady] = useState(false);\r\n  const [openMealDetail, setopenMealDetail] = useState(false);\r\n  const [openIngredientLis, setopenIngredientLis] = useState(false);\r\n  const [ingrediantList, setingrediantList] = useState([]);\r\n  const [openaddMeal, setopenaddMeal] = useState(false);\r\n  const [mealtoAdd, setmealtoAdd] = useState({\r\n    name: \"\",\r\n    price: 0,\r\n    discount: 0,\r\n    duration: 0,\r\n    hotMeal: false,\r\n    description: \"\",\r\n  });\r\n  const [meal, setmeal] = useState({\r\n    name: \"\",\r\n    price: 0,\r\n    discount: 0,\r\n    duration: 0,\r\n    hotMeal: false,\r\n    description: \"\",\r\n  });\r\n  const doopeningrediantList = () => {\r\n    setopenIngredientLis(!openIngredientLis);\r\n  };\r\n  const customerTableHead = [\"\", \"name\", \"\"];\r\n  const mealTableHead = [\"\", \"name\", \"Description\"];\r\n  const ingrediantTableHead = [\"name\"];\r\n\r\n  const renderHead = (item, index) => <th key={index}>{item}</th>;\r\n  const renderIngrediantHead = (item, index) => (\r\n    <th key={index} className=\" col-1\">\r\n      {item}\r\n    </th>\r\n  );\r\n\r\n  const openEditCatfore = async (categorie) => {\r\n    setopenEdit(false);\r\n    setopenMealDetail(false);\r\n\r\n    await setlistMeal(categorie.meals);\r\n    setcategorieTitle(categorie.name);\r\n    setopenEdit(true);\r\n  };\r\n  const renderBody = (item, index) => (\r\n    <tr key={index}>\r\n      <td></td>\r\n      <td>{item.name}</td>\r\n      <td>\r\n        <button onClick={() => openEditCatfore(item)} className=\"button col-6\">\r\n          Edit\r\n        </button>\r\n      </td>\r\n    </tr>\r\n  );\r\n  const opedEditMeal = async (onemeal) => {\r\n    setopenMealDetail(false);\r\n    await setingrediantList(onemeal.ingrediants[0]);\r\n    setmeal({\r\n      name: onemeal.name,\r\n      price: onemeal.price,\r\n      discount: onemeal.discount,\r\n      duration: onemeal.duration,\r\n      hotMeal: onemeal.hotMeal,\r\n      description: onemeal.description,\r\n    });\r\n    setopenMealDetail(true);\r\n  };\r\n  const renderIngrediantBody = (item, index) => (\r\n    <tr key={index}>\r\n      <td className=\" col-1\">{item}</td>\r\n\r\n      <td>\r\n        <button className=\"button col-3\">Edit</button>\r\n      </td>\r\n    </tr>\r\n  );\r\n\r\n  const renderMealBody = (item, index) => (\r\n    <tr key={index}>\r\n      <td></td>\r\n      <td>{item.name}</td>\r\n      <td>{item.description}</td>\r\n      <td>\r\n        <button className=\"button col-10\" onClick={() => opedEditMeal(item)}>\r\n          Detail\r\n        </button>\r\n      </td>\r\n    </tr>\r\n  );\r\n  const history = useHistory();\r\n  if (localStorage.getItem(\"auth\") != \"true\") {\r\n    //check condition\r\n    history.push(\"/login\");\r\n  }\r\n  React.useEffect(async () => {\r\n    await axios\r\n      .get(\r\n        BaseUrl +\r\n          \"/menu/getbyrestaurant/\" +\r\n          localStorage.getItem(\"restaurant_id\")\r\n      )\r\n      .then((response) => {\r\n        setlistCategories(response.data[\"categories\"]);\r\n        setdataReady(true);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }, []);\r\n  const doOpenAddCategorie = () => {\r\n    setopenAddCategorie(true);\r\n  };\r\n  const doCloseAddMeal = () => {\r\n    setopenaddMeal(false);\r\n  };\r\n  const doOpenAddMeal = () => {\r\n    setopenaddMeal(true);\r\n  };\r\n  const doCloseopenAddCategorie = () => {\r\n    setopenAddCategorie(false);\r\n  };\r\n  const addCategorie = () => {\r\n    axios\r\n      .post(\r\n        BaseUrl + \"/categories/createwithoutMeals\",\r\n        {\r\n          name: categorietoadd,\r\n        },\r\n        {\r\n          headers: { restaurantid: localStorage.getItem(\"restaurant_id\") },\r\n        }\r\n      )\r\n      .then((res) => {\r\n        if (res.status == 201) {\r\n          listCategories.push({ name: res.data[\"name\"] });\r\n          doCloseopenAddCategorie();\r\n          setcategorietoadd(\"\");\r\n          setdataReady(false);\r\n          setcategorieTitle(res.data[\"name\"]);\r\n          setmeal(res.data);\r\n          setopenEdit(true);\r\n          setdataReady(true);\r\n        }\r\n        console.log(res);\r\n      });\r\n  };\r\n  const closedEditMeal = () => {\r\n    setopenMealDetail(false);\r\n  };\r\n  const DoaddMeal = () => {\r\n    axios\r\n      .post(\r\n        BaseUrl + \"/meal/create\",\r\n        {\r\n          name: mealtoAdd.name,\r\n        },\r\n        {\r\n          headers: {\r\n            restaurantid: localStorage.getItem(\"restaurant_id\"),\r\n            categoryname: categorieTitle,\r\n          },\r\n        }\r\n      )\r\n      .then(async (res) => {\r\n        if (res.status == 201) {\r\n          doCloseAddMeal();\r\n          setmealtoAdd({});\r\n          setopenEdit(false);\r\n          await setlistMeal((listMeal) => [...listMeal, res.data]);\r\n          setopenEdit(true);\r\n        }\r\n      });\r\n  };\r\n  return (\r\n    <div>\r\n      <h2 className=\"page-header\">Menu</h2>\r\n      <div className=\"row\">\r\n        <h3 className=\"page-header col-3\">Categories list</h3>\r\n        <button className=\"button col-2\" onClick={doOpenAddCategorie}>\r\n          Add Categorie\r\n        </button>\r\n      </div>\r\n      {openAddCategorie ? (\r\n        <div className=\"row\">\r\n          <div className=\"col-6\">\r\n            <div className=\"card\">\r\n              <label>Categorie name</label>\r\n              <br />\r\n              <Input\r\n                type=\"text\"\r\n                placeholder=\"Categorie\"\r\n                value={categorietoadd}\r\n                onChange={(e) => setcategorietoadd(e.target.value)}\r\n              />\r\n              <div className=\"row\">\r\n                <div className=\"col-3\">\r\n                  {\" \"}\r\n                  <button className=\"button col-12\" onClick={addCategorie}>\r\n                    submit\r\n                  </button>\r\n                </div>\r\n                <div className=\"col-3\">\r\n                  <button\r\n                    className=\"button col-12\"\r\n                    onClick={doCloseopenAddCategorie}\r\n                  >\r\n                    cancel\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <div></div>\r\n      )}\r\n\r\n      <div className=\"row\">\r\n        <div className=\"col-5\">\r\n          <div className=\"card\">\r\n            <div className=\"card__body\">\r\n              {dataReady ? (\r\n                <Table\r\n                  limit=\"10\"\r\n                  headData={customerTableHead}\r\n                  renderHead={(item, index) => renderHead(item, index)}\r\n                  bodyData={listCategories}\r\n                  renderBody={(item, index) => renderBody(item, index)}\r\n                />\r\n              ) : (\r\n                <div></div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-6\">\r\n          {openMealDetail ? (\r\n            <div className=\"card\">\r\n              <div className=\"card__body\">\r\n                <div className=\"row\">\r\n                  <div className=\"col-4\">\r\n                    <h4>Meal name : </h4>\r\n                    <p>{meal.name}</p>\r\n                    <h4>Meal description : </h4>\r\n                    <p>{meal.description} </p>\r\n                    <h4>Meal price : </h4>\r\n                    <p>{meal.price} DT</p>\r\n                    <h4>Meal duration : </h4>\r\n                    <p>{meal.duration} min</p>\r\n                    <h4>Meal discount : </h4>\r\n                    <p>{meal.discount} %</p>\r\n                  </div>\r\n                  <div className=\"col-8\">\r\n                    <div className=\"row\">\r\n                      <div className=\"col-8\">\r\n                        {\" \"}\r\n                        <button\r\n                          onClick={doopeningrediantList}\r\n                          className=\"button col-8\"\r\n                        >\r\n                          toggle ingrediants\r\n                        </button>\r\n                      </div>\r\n                      <div className=\"col-4\">\r\n                        <button\r\n                          className=\"button col-8\"\r\n                          onClick={() => closedEditMeal()}\r\n                        >\r\n                          close\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n\r\n                    {openIngredientLis ? (\r\n                      <div>\r\n                        <br />{\" \"}\r\n                        <button className=\"button col-5\">\r\n                          add ingrediants\r\n                        </button>\r\n                        <Table\r\n                          limit=\"10\"\r\n                          headData={ingrediantTableHead}\r\n                          renderHead={(item, index) =>\r\n                            renderIngrediantHead(item, index)\r\n                          }\r\n                          bodyData={ingrediantList}\r\n                          renderBody={(item, index) =>\r\n                            renderIngrediantBody(item, index)\r\n                          }\r\n                        />\r\n                      </div>\r\n                    ) : (\r\n                      <div></div>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            <div></div>\r\n          )}\r\n          {openEdit ? (\r\n            <div className=\"card\">\r\n              <div className=\"card__body\">\r\n                <h3>{categorieTitle}</h3>\r\n                <br></br>\r\n                <div className=\"row\">\r\n                  <div className=\"col-6\">\r\n                    <h4>Meals list :</h4>\r\n                  </div>\r\n\r\n                  <div className=\"col-6\">\r\n                    <button className=\"button col-6\" onClick={doOpenAddMeal}>\r\n                      Add Meal\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n                {openaddMeal ? (\r\n                  <div className=\"col-12\">\r\n                    <br />\r\n\r\n                    <label>Meal name</label>\r\n                    <br />\r\n                    <br />\r\n                    <Input\r\n                      type=\"text\"\r\n                      placeholder=\"Meal name\"\r\n                      value={mealtoAdd[\"name\"]}\r\n                      onChange={(e) => setmealtoAdd({ name: e.target.value })}\r\n                    />\r\n                    <br />\r\n\r\n                    <label>Meal description</label>\r\n                    <br />\r\n                    <br />\r\n                    <Input\r\n                      type=\"text\"\r\n                      placeholder=\"Meal description\"\r\n                      value={mealtoAdd.description}\r\n                      onChange={(e) =>\r\n                        setmealtoAdd({ description: e.target.value })\r\n                      }\r\n                    />\r\n\r\n                    <label>\r\n                      <br />\r\n\r\n                      <label>Meal price</label>\r\n                      <br />\r\n                      <br />\r\n                      <Input\r\n                        type=\"number\"\r\n                        placeholder=\"Meal price\"\r\n                        value={mealtoAdd.price}\r\n                        onChange={(e) =>\r\n                          setmealtoAdd({ price: e.target.value })\r\n                        }\r\n                      />\r\n                    </label>\r\n                    <br />\r\n\r\n                    <label>Meal duration</label>\r\n                    <br />\r\n                    <br />\r\n\r\n                    <Input\r\n                      type=\"number\"\r\n                      placeholder=\"Meal duration\"\r\n                      value={mealtoAdd.duration}\r\n                      onChange={(e) =>\r\n                        setmealtoAdd({ duration: e.target.value })\r\n                      }\r\n                    />\r\n                    <br />\r\n\r\n                    <label>Meal discount</label>\r\n                    <br />\r\n                    <br />\r\n\r\n                    <Input\r\n                      type=\"number\"\r\n                      placeholder=\"Meal discount\"\r\n                      value={mealtoAdd.discount}\r\n                      onChange={(e) =>\r\n                        setmealtoAdd({ discount: e.target.value })\r\n                      }\r\n                    />\r\n                    <div className=\"row\">\r\n                      <div className=\"col-3\">\r\n                        {\" \"}\r\n                        <button className=\"button col-12\" onClick={DoaddMeal}>\r\n                          submit\r\n                        </button>\r\n                      </div>\r\n                      <div className=\"col-3\">\r\n                        <button\r\n                          className=\"button col-12\"\r\n                          onClick={doCloseAddMeal}\r\n                        >\r\n                          cancel\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                ) : (\r\n                  <div></div>\r\n                )}\r\n\r\n                <br />\r\n                {dataReady ? (\r\n                  <Table\r\n                    limit=\"10\"\r\n                    headData={mealTableHead}\r\n                    renderHead={(item, index) => renderHead(item, index)}\r\n                    bodyData={listMeal}\r\n                    renderBody={(item, index) => renderMealBody(item, index)}\r\n                  />\r\n                ) : (\r\n                  <div></div>\r\n                )}\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            <div></div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Menu;\r\n","C:\\Users\\Planete Gaming\\Desktop\\react\\src\\pages\\Orders\\Orders.jsx",["111","112","113"],"import React from \"react\";\r\nimport notifsound from \"../../assets/notif.mp3\";\r\n\r\nimport axios from \"axios\";\r\nimport { BaseUrl } from \"../../helpers/base_url\";\r\nimport Table from \"../../components/table/Table\";\r\nimport socketIOClient from \"socket.io-client\";\r\nimport { useState } from \"react\";\r\nconst SERVER = \"http://127.0.0.1:8080\";\r\n\r\nconst Orders = () => {\r\n  const [listOrder, setlistOrder] = useState([]);\r\n  const [dataReady, setdataReady] = useState(false);\r\n  const [newOrdersList, setnewOrdersList] = useState([]);\r\n  const customerTableHead = [\"date\", \"note\", \"price\", \"meal number\", \"\"];\r\n  const renderHead = (item, index) => <th key={index}>{item}</th>;\r\n  const renderOrderBody = (item, index) => (\r\n    <tr key={index}>\r\n      <td className=\" col-4\">{item.createdAt}</td>\r\n\r\n      <td className=\" col-2\">{item.note}</td>\r\n\r\n      <td className=\" col-2\">{item.price}</td>\r\n\r\n      <td className=\" col-2\">{item.meals.length}</td>\r\n    </tr>\r\n  );\r\n  React.useEffect(async () => {\r\n    var socket = socketIOClient(SERVER);\r\n    socket.on(\"newcommand\", (command) => {\r\n      if (command.restaurant == localStorage.getItem(\"restaurant_id\")) {\r\n        console.log(command);\r\n        setnewOrdersList((newOrdersList) => [...newOrdersList, command]);\r\n        var audio = new Audio(notifsound);\r\n        audio.play();\r\n      }\r\n    });\r\n\r\n    await axios\r\n      .get(\r\n        BaseUrl +\r\n          \"/command/getall/byrestaurantid/\" +\r\n          localStorage.getItem(\"restaurant_id\")\r\n      )\r\n      .then((response) => {\r\n        //   console.log(response.data);\r\n        setlistOrder(response.data);\r\n        setdataReady(true);\r\n      });\r\n    return () => socket.disconnect();\r\n  }, []);\r\n  const renderNewOrder = (item) => {\r\n    <div className=\"card col-8\">\r\n      <div className=\"card__body\">\r\n        <div className=\"row\">\r\n          <div className=\"col-4\">\r\n            {\" \"}\r\n            <h3>New Order</h3>\r\n          </div>\r\n          <div className=\"col-4\">\r\n            <button className=\"button col-6\">Accept</button>\r\n          </div>\r\n        </div>\r\n        <br />\r\n        <h4>Note :</h4>\r\n        <p>{item.note}</p>\r\n        <br />\r\n\r\n        <h4>Meal List :</h4>\r\n\r\n        <br />\r\n\r\n        <h4>Price :</h4>\r\n        <p>{item.price}</p>\r\n      </div>\r\n    </div>;\r\n  };\r\n\r\n  return (\r\n    <div className=\"col-12\">\r\n      <h2 className=\"page-header\">Orders</h2>\r\n      <br />\r\n      <div>\r\n        {newOrdersList.sort().map((item) => (\r\n          <div className=\"card col-8\">\r\n            <div className=\"card__body\">\r\n              <div className=\"row\">\r\n                <div className=\"col-4\">\r\n                  {\" \"}\r\n                  <h3>New Order</h3>\r\n                </div>\r\n                <div className=\"col-4\">\r\n                  <button className=\"button col-6\">Accept</button>\r\n                </div>\r\n              </div>\r\n              <br />\r\n              <h4>Note :</h4>\r\n              <p>{item.note}</p>\r\n              <br />\r\n\r\n              <h4>Meal List :</h4>\r\n\r\n              <p>Makloub </p>\r\n              <p>Makloub </p>\r\n              <p>Makloub </p>\r\n              <br />\r\n\r\n              <h4>Price :</h4>\r\n              <p>{item.price}</p>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <div className=\"col-12\">\r\n        <div className=\"row\">\r\n          <div className=\"col-12\">\r\n            <div className=\"card\">\r\n              <div className=\"card__body\">\r\n                {dataReady ? (\r\n                  <Table\r\n                    limit=\"10\"\r\n                    headData={customerTableHead}\r\n                    renderHead={(item, index) => renderHead(item, index)}\r\n                    bodyData={listOrder}\r\n                    renderBody={(item, index) => renderOrderBody(item, index)}\r\n                  />\r\n                ) : (\r\n                  <div></div>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Orders;\r\n","C:\\Users\\Planete Gaming\\Desktop\\react\\src\\components\\dropdown\\Dropdown.jsx",[],"C:\\Users\\Planete Gaming\\Desktop\\react\\src\\components\\thememenu\\ThemeMenu.jsx",[],"C:\\Users\\Planete Gaming\\Desktop\\react\\src\\components\\status-card\\StatusCard.jsx",[],"C:\\Users\\Planete Gaming\\Desktop\\react\\src\\components\\badge\\Badge.jsx",[],"C:\\Users\\Planete Gaming\\Desktop\\react\\src\\components\\table\\Table.jsx",[],"C:\\Users\\Planete Gaming\\Desktop\\react\\src\\pages\\Resto\\Resto.jsx",["114","115","116","117","118","119","120","121"],{"ruleId":"122","replacedBy":"123"},{"ruleId":"124","replacedBy":"125"},{"ruleId":"126","severity":1,"message":"127","line":18,"column":24,"nodeType":"128","messageId":"129","endLine":18,"endColumn":26},{"ruleId":"126","severity":1,"message":"127","line":28,"column":24,"nodeType":"128","messageId":"129","endLine":28,"endColumn":26},{"ruleId":"126","severity":1,"message":"127","line":46,"column":12,"nodeType":"128","messageId":"129","endLine":46,"endColumn":14},{"ruleId":"126","severity":1,"message":"127","line":33,"column":12,"nodeType":"128","messageId":"129","endLine":33,"endColumn":14},{"ruleId":"126","severity":1,"message":"127","line":35,"column":18,"nodeType":"128","messageId":"129","endLine":35,"endColumn":20},{"ruleId":"130","severity":1,"message":"131","line":40,"column":11,"nodeType":"132","messageId":"133","endLine":40,"endColumn":26},{"ruleId":"130","severity":1,"message":"134","line":1,"column":16,"nodeType":"132","messageId":"133","endLine":1,"endColumn":25},{"ruleId":"126","severity":1,"message":"135","line":168,"column":39,"nodeType":"128","messageId":"129","endLine":168,"endColumn":41},{"ruleId":"126","severity":1,"message":"135","line":105,"column":36,"nodeType":"128","messageId":"129","endLine":105,"endColumn":38},{"ruleId":"136","severity":1,"message":"137","line":109,"column":19,"nodeType":"138","endLine":123,"endColumn":4},{"ruleId":"126","severity":1,"message":"127","line":148,"column":24,"nodeType":"128","messageId":"129","endLine":148,"endColumn":26},{"ruleId":"126","severity":1,"message":"127","line":179,"column":24,"nodeType":"128","messageId":"129","endLine":179,"endColumn":26},{"ruleId":"136","severity":1,"message":"137","line":28,"column":19,"nodeType":"138","endLine":51,"endColumn":4},{"ruleId":"126","severity":1,"message":"127","line":31,"column":30,"nodeType":"128","messageId":"129","endLine":31,"endColumn":32},{"ruleId":"130","severity":1,"message":"139","line":52,"column":9,"nodeType":"132","messageId":"133","endLine":52,"endColumn":23},{"ruleId":"130","severity":1,"message":"140","line":7,"column":8,"nodeType":"132","messageId":"133","endLine":7,"endColumn":22},{"ruleId":"130","severity":1,"message":"141","line":8,"column":7,"nodeType":"132","messageId":"133","endLine":8,"endColumn":24},{"ruleId":"130","severity":1,"message":"142","line":11,"column":10,"nodeType":"132","messageId":"133","endLine":11,"endColumn":20},{"ruleId":"130","severity":1,"message":"143","line":11,"column":22,"nodeType":"132","messageId":"133","endLine":11,"endColumn":35},{"ruleId":"126","severity":1,"message":"127","line":54,"column":24,"nodeType":"128","messageId":"129","endLine":54,"endColumn":26},{"ruleId":"136","severity":1,"message":"137","line":63,"column":19,"nodeType":"138","endLine":86,"endColumn":4},{"ruleId":"126","severity":1,"message":"127","line":76,"column":28,"nodeType":"128","messageId":"129","endLine":76,"endColumn":30},{"ruleId":"144","severity":1,"message":"145","line":104,"column":19,"nodeType":"146","endLine":104,"endColumn":86},"no-native-reassign",["147"],"no-negated-in-lhs",["148"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-unused-vars","'activeItemOwner' is assigned a value but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","Expected '!==' and instead saw '!='.","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","'renderNewOrder' is assigned a value but never used.","'GoogleMapReact' is defined but never used.","'AnyReactComponent' is assigned a value but never used.","'openupdate' is assigned a value but never used.","'setopenupdate' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]
=======
[{"C:\\Users\\21653\\Downloads\\tua-react-admin-main\\tua-react-admin-main\\src\\index.js":"1","C:\\Users\\21653\\Downloads\\tua-react-admin-main\\tua-react-admin-main\\src\\reportWebVitals.js":"2","C:\\Users\\21653\\Downloads\\tua-react-admin-main\\tua-react-admin-main\\src\\components\\layout\\Layout.jsx":"3","C:\\Users\\21653\\Downloads\\tua-react-admin-main\\tua-react-admin-main\\src\\redux\\reducers\\index.js":"4","C:\\Users\\21653\\Downloads\\tua-react-admin-main\\tua-react-admin-main\\src\\redux\\actions\\ThemeAction.js":"5","C:\\Users\\21653\\Downloads\\tua-react-admin-main\\tua-react-admin-main\\src\\components\\sidebar\\Sidebar.jsx":"6","C:\\Users\\21653\\Downloads\\tua-react-admin-main\\tua-react-admin-main\\src\\redux\\reducers\\ThemeReducer.js":"7","C:\\Users\\21653\\Downloads\\tua-react-admin-main\\tua-react-admin-main\\src\\pages\\Login\\login.js":"8","C:\\Users\\21653\\Downloads\\tua-react-admin-main\\tua-react-admin-main\\src\\components\\Routes.jsx":"9","C:\\Users\\21653\\Downloads\\tua-react-admin-main\\tua-react-admin-main\\src\\components\\topnav\\TopNav.jsx":"10","C:\\Users\\21653\\Downloads\\tua-react-admin-main\\tua-react-admin-main\\src\\pages\\Login\\LoginElements.js":"11","C:\\Users\\21653\\Downloads\\tua-react-admin-main\\tua-react-admin-main\\src\\pages\\Customers.jsx":"12","C:\\Users\\21653\\Downloads\\tua-react-admin-main\\tua-react-admin-main\\src\\helpers\\base_url.jsx":"13","C:\\Users\\21653\\Downloads\\tua-react-admin-main\\tua-react-admin-main\\src\\pages\\Dashboard.jsx":"14","C:\\Users\\21653\\Downloads\\tua-react-admin-main\\tua-react-admin-main\\src\\components\\dropdown\\Dropdown.jsx":"15","C:\\Users\\21653\\Downloads\\tua-react-admin-main\\tua-react-admin-main\\src\\components\\thememenu\\ThemeMenu.jsx":"16","C:\\Users\\21653\\Downloads\\tua-react-admin-main\\tua-react-admin-main\\src\\pages\\Menues\\Menu.jsx":"17","C:\\Users\\21653\\Downloads\\tua-react-admin-main\\tua-react-admin-main\\src\\pages\\Orders\\Orders.jsx":"18","C:\\Users\\21653\\Downloads\\tua-react-admin-main\\tua-react-admin-main\\src\\components\\table\\Table.jsx":"19","C:\\Users\\21653\\Downloads\\tua-react-admin-main\\tua-react-admin-main\\src\\components\\badge\\Badge.jsx":"20","C:\\Users\\21653\\Downloads\\tua-react-admin-main\\tua-react-admin-main\\src\\components\\status-card\\StatusCard.jsx":"21"},{"size":897,"mtime":1645568187241,"results":"22","hashOfConfig":"23"},{"size":362,"mtime":1645484965820,"results":"24","hashOfConfig":"23"},{"size":1562,"mtime":1645551858653,"results":"25","hashOfConfig":"23"},{"size":162,"mtime":1645484967655,"results":"26","hashOfConfig":"23"},{"size":364,"mtime":1645484967589,"results":"27","hashOfConfig":"23"},{"size":1635,"mtime":1645804951296,"results":"28","hashOfConfig":"23"},{"size":399,"mtime":1645484967625,"results":"29","hashOfConfig":"23"},{"size":2025,"mtime":1646010449833,"results":"30","hashOfConfig":"23"},{"size":704,"mtime":1646010449830,"results":"31","hashOfConfig":"23"},{"size":3653,"mtime":1646617616523,"results":"32","hashOfConfig":"23"},{"size":1401,"mtime":1645974121594,"results":"33","hashOfConfig":"23"},{"size":1487,"mtime":1645484967486,"results":"34","hashOfConfig":"23"},{"size":47,"mtime":1646607910384,"results":"35","hashOfConfig":"23"},{"size":7399,"mtime":1646010449832,"results":"36","hashOfConfig":"23"},{"size":1817,"mtime":1645484966896,"results":"37","hashOfConfig":"23"},{"size":4901,"mtime":1645484967348,"results":"38","hashOfConfig":"23"},{"size":20403,"mtime":1646613077890,"results":"39","hashOfConfig":"23"},{"size":4019,"mtime":1646610776782,"results":"40","hashOfConfig":"23"},{"size":2402,"mtime":1645484967280,"results":"41","hashOfConfig":"23"},{"size":216,"mtime":1645484966812,"results":"42","hashOfConfig":"23"},{"size":448,"mtime":1645484967180,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"1jiac6i",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"46"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"46"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"46"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"46"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"46"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"C:\\Users\\21653\\Downloads\\tua-react-admin-main\\tua-react-admin-main\\src\\index.js",[],["92","93"],"C:\\Users\\21653\\Downloads\\tua-react-admin-main\\tua-react-admin-main\\src\\reportWebVitals.js",[],"C:\\Users\\21653\\Downloads\\tua-react-admin-main\\tua-react-admin-main\\src\\components\\layout\\Layout.jsx",[],"C:\\Users\\21653\\Downloads\\tua-react-admin-main\\tua-react-admin-main\\src\\redux\\reducers\\index.js",[],"C:\\Users\\21653\\Downloads\\tua-react-admin-main\\tua-react-admin-main\\src\\redux\\actions\\ThemeAction.js",[],"C:\\Users\\21653\\Downloads\\tua-react-admin-main\\tua-react-admin-main\\src\\components\\sidebar\\Sidebar.jsx",["94","95","96"],"import React from 'react'\n\nimport { Link } from 'react-router-dom'\n\nimport './sidebar.css'\n\nimport logo from '../../assets/images/LEDYLOGO.png'\n\nimport sidebar_items from '../../assets/JsonData/sidebar_routes.json'\n\nimport sidebar_items_owner from '../../assets/JsonData/sidebar_routes.json'\n\n\nconst SidebarItem = props => {\n\n    const active = props.active ? 'active' : ''\n\n    return (\n        <div className=\"sidebar__item\">\n            <div className={`sidebar__item-inner ${active}`}>\n                <i className={props.icon}></i>\n                <span>\n                    {props.title}\n                </span>\n            </div>\n        </div>\n    )\n}\n\nconst Sidebar = props => {\n    let role = \"waiter\"\n    let items =[];\n    if(role==\"waiter\"){\n        items=sidebar_items\n    }else if(role==\"owner\"){\n        items=sidebar_items_owner\n    }\n\n    const activeItem = items.findIndex(item => item.route === props.location.pathname)\n    const activeItemOwner = items.findIndex(item=>item.route===props.location.pathname)\n    return (\n        <div className='sidebar'>\n            <div className=\"sidebar__logo\">\n                <img src={logo} alt=\"company logo\" />\n            </div>\n            {\n                items.map((item, index) => (\n                    <Link to={item.route} key={index}>\n                        <SidebarItem\n                            title={item.display_name}\n                            icon={item.icon}\n                            active={index === activeItem}\n                        />\n                    </Link>\n                ))\n            }\n        </div>\n    )\n}\n\nexport default Sidebar\n","C:\\Users\\21653\\Downloads\\tua-react-admin-main\\tua-react-admin-main\\src\\redux\\reducers\\ThemeReducer.js",[],"C:\\Users\\21653\\Downloads\\tua-react-admin-main\\tua-react-admin-main\\src\\pages\\Login\\login.js",["97","98"],"import React ,{useState}from 'react';\r\nimport { Wrapper,Form ,Input,Button, Title} from './LoginElements';\r\nimport { BaseUrl } from '../../helpers/base_url';\r\nimport axios from 'axios';\r\nimport { useHistory } from \"react-router-dom\";\r\nconst Login=()=>{\r\n    const [email,setEmail] = useState('');\r\n    const [password,setPassword] = useState('');\r\n    const history = useHistory();\r\n    const doTheLogin= async() =>  {\r\n      await axios.post(\r\n        BaseUrl + \"/employe/login\",\r\n        {\r\n          email: email ,\r\n          password: password\r\n        }\r\n      ).then((res) => {\r\n        if (res.status == 200) {\r\n          localStorage.setItem('auth',true);\r\n          localStorage.setItem('id',res.data['employe']['_id']);\r\n          localStorage.setItem('firstname',res.data['employe']['firstName']);\r\n          localStorage.setItem('lastname',res.data['employe']['lastName']);\r\n          localStorage.setItem('email',res.data['employe']['email']);\r\n          localStorage.setItem('restaurant_id',res.data['employe']['restaurant']);\r\n          localStorage.setItem('role',res.data['employe']['role']);\r\n          history.push(\"/\");\r\n        }\r\n        if (res.status == 422)\r\n        {\r\n          alert(`Invalid email or password`);\r\n        }\r\n        console.log(res);\r\n      });\r\n    }\r\n    const handleSubmit = event => {\r\n      event.preventDefault();\r\n      doTheLogin();\r\n    };\r\n    return <>\r\n  <Wrapper>\r\n        <Form onSubmit={handleSubmit}>\r\n            <Title>Welcome</Title>\r\n          <Input\r\n            type=\"email\"\r\n            name=\"email\"\r\n            onChange={e=>setEmail(e.target.value)}\r\n            placeholder='email'\r\n            value={email}\r\n          />\r\n          <Input\r\n          onChange={e=>setPassword(e.target.value)}\r\n            type=\"password\"\r\n            name=\"password\"\r\n            placeholder='password'\r\n            value={password}\r\n          />\r\n          <Button type=\"submit\">Login</Button>\r\n        </Form>\r\n      </Wrapper>\r\n    </>\r\n};  \r\nexport default Login;\r\n","C:\\Users\\21653\\Downloads\\tua-react-admin-main\\tua-react-admin-main\\src\\components\\Routes.jsx",[],"C:\\Users\\21653\\Downloads\\tua-react-admin-main\\tua-react-admin-main\\src\\components\\topnav\\TopNav.jsx",["99","100","101"],"C:\\Users\\21653\\Downloads\\tua-react-admin-main\\tua-react-admin-main\\src\\pages\\Login\\LoginElements.js",[],"C:\\Users\\21653\\Downloads\\tua-react-admin-main\\tua-react-admin-main\\src\\pages\\Customers.jsx",[],"C:\\Users\\21653\\Downloads\\tua-react-admin-main\\tua-react-admin-main\\src\\helpers\\base_url.jsx",[],"C:\\Users\\21653\\Downloads\\tua-react-admin-main\\tua-react-admin-main\\src\\pages\\Dashboard.jsx",["102","103"],"import React, {useEffect} from 'react'\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport Chart from 'react-apexcharts'\r\n\r\nimport { useSelector } from 'react-redux'\r\n\r\nimport StatusCard from '../components/status-card/StatusCard'\r\n\r\nimport Table from '../components/table/Table'\r\n\r\nimport Badge from '../components/badge/Badge'\r\n\r\nimport statusCards from '../assets/JsonData/status-card-data.json'\r\n\r\nconst chartOptions = {\r\n    series: [{\r\n        name: 'Online Customers',\r\n        data: [40,70,20,90,36,80,30,91,60]\r\n    }, {\r\n        name: 'Store Customers',\r\n        data: [40, 30, 70, 80, 40, 16, 40, 20, 51, 10]\r\n    }],\r\n    options: {\r\n        color: ['#6ab04c', '#2980b9'],\r\n        chart: {\r\n            background: 'transparent'\r\n        },\r\n        dataLabels: {\r\n            enabled: false\r\n        },\r\n        stroke: {\r\n            curve: 'smooth'\r\n        },\r\n        xaxis: {\r\n            categories: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep']\r\n        },\r\n        legend: {\r\n            position: 'top'\r\n        },\r\n        grid: {\r\n            show: false\r\n        }\r\n    }\r\n}\r\n\r\nconst topCustomers = {\r\n    head: [\r\n        'user',\r\n        'total orders',\r\n        'total spending'\r\n    ],\r\n    body: [\r\n        {\r\n            \"username\": \"john doe\",\r\n            \"order\": \"490\",\r\n            \"price\": \"$15,870\"\r\n        },\r\n        {\r\n            \"username\": \"frank iva\",\r\n            \"order\": \"250\",\r\n            \"price\": \"$12,251\"\r\n        },\r\n        {\r\n            \"username\": \"anthony baker\",\r\n            \"order\": \"120\",\r\n            \"price\": \"$10,840\"\r\n        },\r\n        {\r\n            \"username\": \"frank iva\",\r\n            \"order\": \"110\",\r\n            \"price\": \"$9,251\"\r\n        },\r\n        {\r\n            \"username\": \"anthony baker\",\r\n            \"order\": \"80\",\r\n            \"price\": \"$8,840\"\r\n        }\r\n    ]\r\n}\r\n\r\nconst renderCusomerHead = (item, index) => (\r\n    <th key={index}>{item}</th>\r\n)\r\n\r\nconst renderCusomerBody = (item, index) => (\r\n    <tr key={index}>\r\n        <td>{item.username}</td>\r\n        <td>{item.order}</td>\r\n        <td>{item.price}</td>\r\n    </tr>\r\n)\r\n\r\nconst latestOrders = {\r\n    header: [\r\n        \"order id\",\r\n        \"user\",\r\n        \"total price\",\r\n        \"date\",\r\n        \"status\"\r\n    ],\r\n    body: [\r\n        {\r\n            id: \"#OD1711\",\r\n            user: \"john doe\",\r\n            date: \"17 Jun 2021\",\r\n            price: \"$900\",\r\n            status: \"shipping\"\r\n        },\r\n        {\r\n            id: \"#OD1712\",\r\n            user: \"frank iva\",\r\n            date: \"1 Jun 2021\",\r\n            price: \"$400\",\r\n            status: \"paid\"\r\n        },\r\n        {\r\n            id: \"#OD1713\",\r\n            user: \"anthony baker\",\r\n            date: \"27 Jun 2021\",\r\n            price: \"$200\",\r\n            status: \"pending\"\r\n        },\r\n        {\r\n            id: \"#OD1712\",\r\n            user: \"frank iva\",\r\n            date: \"1 Jun 2021\",\r\n            price: \"$400\",\r\n            status: \"paid\"\r\n        },\r\n        {\r\n            id: \"#OD1713\",\r\n            user: \"anthony baker\",\r\n            date: \"27 Jun 2021\",\r\n            price: \"$200\",\r\n            status: \"refund\"\r\n        }\r\n    ]\r\n}\r\n\r\nconst orderStatus = {\r\n    \"shipping\": \"primary\",\r\n    \"pending\": \"warning\",\r\n    \"paid\": \"success\",\r\n    \"refund\": \"danger\"\r\n}\r\n\r\nconst renderOrderHead = (item, index) => (\r\n    <th key={index}>{item}</th>\r\n)\r\n\r\nconst renderOrderBody = (item, index) => (\r\n    <tr key={index}>\r\n        <td>{item.id}</td>\r\n        <td>{item.user}</td>\r\n        <td>{item.price}</td>\r\n        <td>{item.date}</td>\r\n        <td>\r\n            <Badge type={orderStatus[item.status]} content={item.status}/>\r\n        </td>\r\n    </tr>\r\n)\r\n\r\nconst Dashboard = () => {\r\n    const history = useHistory();\r\n    if ( localStorage.getItem(\"auth\") != \"true\" ) //check condition\r\n    {\r\n        history.push(\"/login\");\r\n    }\r\n    const themeReducer = useSelector(state => state.ThemeReducer.mode)\r\n\r\n    return (\r\n        <div>\r\n            <h2 className=\"page-header\">Dashboard</h2>\r\n            <div className=\"row\">\r\n                <div className=\"col-6\">\r\n                    <div className=\"row\">\r\n                        {\r\n                            statusCards.map((item, index) => (\r\n                                <div className=\"col-6\" key={index}>\r\n                                    <StatusCard\r\n                                        icon={item.icon}\r\n                                        count={item.count}\r\n                                        title={item.title}\r\n                                    />\r\n                                </div>\r\n                            ))\r\n                        }\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-6\">\r\n                    <div className=\"card full-height\">\r\n                        {/* chart */}\r\n                        <Chart\r\n                            options={themeReducer === 'theme-mode-dark' ? {\r\n                                ...chartOptions.options,\r\n                                theme: { mode: 'dark'}\r\n                            } : {\r\n                                ...chartOptions.options,\r\n                                theme: { mode: 'light'}\r\n                            }}\r\n                            series={chartOptions.series}\r\n                            type='line'\r\n                            height='100%'\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-4\">\r\n                    <div className=\"card\">\r\n                        <div className=\"card__header\">\r\n                            <h3>top customers</h3>\r\n                        </div>\r\n                        <div className=\"card__body\">\r\n                            <Table\r\n                                headData={topCustomers.head}\r\n                                renderHead={(item, index) => renderCusomerHead(item, index)}\r\n                                bodyData={topCustomers.body}\r\n                                renderBody={(item, index) => renderCusomerBody(item, index)}\r\n                            />\r\n                        </div>\r\n                        <div className=\"card__footer\">\r\n                            <Link to='/'>view all</Link>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-8\">\r\n                    <div className=\"card\">\r\n                        <div className=\"card__header\">\r\n                            <h3>latest orders</h3>\r\n                        </div>\r\n                        <div className=\"card__body\">\r\n                            <Table\r\n                                headData={latestOrders.header}\r\n                                renderHead={(item, index) => renderOrderHead(item, index)}\r\n                                bodyData={latestOrders.body}\r\n                                renderBody={(item, index) => renderOrderBody(item, index)}\r\n                            />\r\n                        </div>\r\n                        <div className=\"card__footer\">\r\n                            <Link to='/'>view all</Link>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dashboard\r\n","C:\\Users\\21653\\Downloads\\tua-react-admin-main\\tua-react-admin-main\\src\\components\\dropdown\\Dropdown.jsx",[],"C:\\Users\\21653\\Downloads\\tua-react-admin-main\\tua-react-admin-main\\src\\components\\thememenu\\ThemeMenu.jsx",[],"C:\\Users\\21653\\Downloads\\tua-react-admin-main\\tua-react-admin-main\\src\\pages\\Menues\\Menu.jsx",["104","105","106","107","108"],"import React, { useState } from \"react\";\r\nimport { Input } from \"../Login/LoginElements\";\r\nimport axios from \"axios\";\r\nimport { BaseUrl } from \"../../helpers/base_url\";\r\nimport Table from \"../../components/table/Table\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst Menu = () => {\r\n  const [openAddCategorie, setopenAddCategorie] = useState(false);\r\n  const [categorietoadd, setcategorietoadd] = useState(\"\");\r\n  const [listCategories, setlistCategories] = useState([]);\r\n  const [listMeal, setlistMeal] = useState([]);\r\n  const [categorieTitle, setcategorieTitle] = useState(\"\");\r\n  const [openEdit, setopenEdit] = useState(false);\r\n  const [dataReady, setdataReady] = useState(false);\r\n  const [openMealDetail, setopenMealDetail] = useState(false);\r\n  const [openIngredientLis, setopenIngredientLis] = useState(false);\r\n  const [ingrediantList, setingrediantList] = useState([]);\r\n  const [openaddMeal, setopenaddMeal] = useState(false);\r\n  const [selectedFile, setSelectedFile] = React.useState(null);\r\n  const [selectedFileMeal, setSelectedFileMeal] = React.useState(null);\r\n  const handleFileSelectMeal = (event) => {\r\n    setSelectedFileMeal(event.target.files[0]);\r\n  };\r\n  const handleFileSelect = (event) => {\r\n    setSelectedFile(event.target.files[0]);\r\n  };\r\n  const [erroraddingrediant, seterroraddingrediant] = useState(false);\r\n  const [ingrediantToNewMeal, setingrediantToNewMeal] = useState();\r\n  const [addIngrediantToExist, setaddIngrediantToExist] = useState(false);\r\n  const [ingrediantlistNew, setingrediantlistNew] = useState([]);\r\n  const [mealtoAdd, setmealtoAdd] = useState({\r\n    name: \"\",\r\n    price: 0,\r\n    discount: 0,\r\n    duration: 0,\r\n    hotMeal: false,\r\n    description: \"\",\r\n  });\r\n  const [meal, setmeal] = useState({\r\n    name: \"\",\r\n    price: 0,\r\n    discount: 0,\r\n    duration: 0,\r\n    hotMeal: false,\r\n    description: \"\",\r\n  });\r\n  const doopeningrediantList = () => {\r\n    setopenIngredientLis(!openIngredientLis);\r\n  };\r\n  const customerTableHead = [\"\", \"name\", \"Edit\"];\r\n  const mealTableHead = [\"\", \"name\", \"detail\", \"delete\"];\r\n  const ingrediantTableHead = [\"name\", \"delete\"];\r\n\r\n  const renderHead = (item, index) => <th key={index}>{item}</th>;\r\n  const renderIngrediantHead = (item, index) => (\r\n    <th key={index} className=\" col-1\">\r\n      {item}\r\n    </th>\r\n  );\r\n\r\n  const openEditCatfore = async (categorie) => {\r\n    setopenEdit(false);\r\n    setopenMealDetail(false);\r\n    if (categorie.meals != undefined) {\r\n      await setlistMeal(categorie.meals);\r\n    }\r\n    setcategorieTitle(categorie.name);\r\n    setopenEdit(true);\r\n  };\r\n  const renderBody = (item, index) => (\r\n    <tr key={index}>\r\n      <td></td>\r\n      <td>{item.name}</td>\r\n      <td>\r\n        <button onClick={() => openEditCatfore(item)} className=\"button col-6\">\r\n          Edit\r\n        </button>\r\n      </td>\r\n    </tr>\r\n  );\r\n  const opedEditMeal = async (onemeal) => {\r\n    setopenMealDetail(false);\r\n    await setingrediantList(onemeal.ingrediants);\r\n    setmeal({\r\n      name: onemeal.name,\r\n      price: onemeal.price,\r\n      discount: onemeal.discount,\r\n      duration: onemeal.duration,\r\n      hotMeal: onemeal.hotMeal,\r\n      description: onemeal.description,\r\n    });\r\n    setopenMealDetail(true);\r\n  };\r\n  const renderIngrediantBody = (item, index) => (\r\n    <tr key={index}>\r\n      <td className=\" col-1\">{item}</td>\r\n\r\n      <td>\r\n        <button className=\"button col-6\">Delete</button>\r\n      </td>\r\n    </tr>\r\n  );\r\n  const deleteMeal = (meal) => {};\r\n  const renderMealBody = (item, index) => (\r\n    <tr key={index}>\r\n      <td></td>\r\n      <td>{item.name}</td>\r\n      <td>\r\n        <button className=\"button col-10\" onClick={() => opedEditMeal(item)}>\r\n          Detail\r\n        </button>\r\n      </td>\r\n      <td>\r\n        <button className=\"button col-10\" onClick={() => deleteMeal(item)}>\r\n          delete\r\n        </button>\r\n      </td>\r\n    </tr>\r\n  );\r\n  const history = useHistory();\r\n  if (localStorage.getItem(\"auth\") != \"true\") {\r\n    //check condition\r\n    history.push(\"/login\");\r\n  }\r\n  React.useEffect(async () => {\r\n    await axios\r\n      .get(\r\n        BaseUrl +\r\n          \"/menu/getbyrestaurant/\" +\r\n          localStorage.getItem(\"restaurant_id\")\r\n      )\r\n      .then((response) => {\r\n        setlistCategories(response.data[\"categories\"]);\r\n        setdataReady(true);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }, []);\r\n  const doOpenAddCategorie = () => {\r\n    setopenAddCategorie(true);\r\n  };\r\n  const doCloseAddMeal = () => {\r\n    setopenaddMeal(false);\r\n  };\r\n  const doOpenAddMeal = () => {\r\n    setopenaddMeal(true);\r\n  };\r\n  const doCloseopenAddCategorie = () => {\r\n    setopenAddCategorie(false);\r\n  };\r\n  const addCategorie = () => {\r\n    const formData = new FormData();\r\n    formData.append(\"image\", selectedFile);\r\n    formData.append(\"name\", categorietoadd);\r\n    axios\r\n      .post(BaseUrl + \"/categories/createwithoutMeals\", formData, {\r\n        headers: { restaurantid: localStorage.getItem(\"restaurant_id\") },\r\n      })\r\n      .then((res) => {\r\n        if (res.status == 201) {\r\n          listCategories.push({ name: res.data[\"name\"] });\r\n          doCloseopenAddCategorie();\r\n          setcategorietoadd(\"\");\r\n          setdataReady(false);\r\n          setcategorieTitle(res.data[\"name\"]);\r\n          setmeal(res.data);\r\n          setopenEdit(true);\r\n          setdataReady(true);\r\n        }\r\n      });\r\n  };\r\n  const closedEditMeal = () => {\r\n    setopenMealDetail(false);\r\n  };\r\n  const addIngrediantToNewMeal = async () => {\r\n    await setingrediantlistNew((prev) => [...prev, ingrediantToNewMeal]);\r\n    setopenaddMeal(false);\r\n    setingrediantToNewMeal(\"\");\r\n    setopenaddMeal(true);\r\n  };\r\n  const DoaddMeal = () => {\r\n    if (ingrediantlistNew.length > 0) {\r\n      const formData = new FormData();\r\n      formData.append(\"image\", selectedFileMeal);\r\n      formData.append(\"price\", mealtoAdd.price);\r\n      formData.append(\"discount\", mealtoAdd.discount);\r\n      formData.append(\"duration\", mealtoAdd.duration);\r\n      formData.append(\"name\", mealtoAdd.name);\r\n      formData.append(\"hotMeal\", false);\r\n      formData.append(\"description\", mealtoAdd.description);\r\n      ingrediantlistNew.forEach((e) => {\r\n        formData.append(\"ingrediants\", e);\r\n      });\r\n\r\n      console.log(ingrediantlistNew);\r\n      axios\r\n        .post(BaseUrl + \"/meal/create\", formData, {\r\n          headers: {\r\n            restaurantid: localStorage.getItem(\"restaurant_id\"),\r\n            categoryname: categorieTitle,\r\n          },\r\n        })\r\n        .then(async (res) => {\r\n          if (res.status == 201) {\r\n            doCloseAddMeal();\r\n            setmealtoAdd({});\r\n            setopenEdit(false);\r\n            setingrediantlistNew([]);\r\n            await setlistMeal((listMeal) => [...listMeal, res.data]);\r\n            setopenEdit(true);\r\n          }\r\n        });\r\n    } else {\r\n      seterroraddingrediant(true);\r\n    }\r\n  };\r\n  const openAddIngreDiantsToExistant = () => {\r\n    setaddIngrediantToExist(true);\r\n  };\r\n  return (\r\n    <div>\r\n      <h2 className=\"page-header\">Menu</h2>\r\n      <div className=\"row\">\r\n        <h3 className=\"page-header col-3\">Categories list</h3>\r\n        <button className=\"button col-2\" onClick={doOpenAddCategorie}>\r\n          Add Categorie\r\n        </button>\r\n      </div>\r\n      {openAddCategorie ? (\r\n        <div className=\"row\">\r\n          <div className=\"col-6\">\r\n            <div className=\"card\">\r\n              <label>Categorie name</label>\r\n              <br />\r\n              <Input\r\n                type=\"text\"\r\n                placeholder=\"Categorie\"\r\n                value={categorietoadd}\r\n                onChange={(e) => setcategorietoadd(e.target.value)}\r\n              />\r\n              <div className=\"row\">\r\n                <label className=\"col-6\">Categorie Image</label>\r\n              </div>\r\n              <br></br>\r\n              <input\r\n                className=\"col-6\"\r\n                type=\"file\"\r\n                onChange={handleFileSelect}\r\n              ></input>\r\n\r\n              <div className=\"row\">\r\n                <div className=\"col-3\">\r\n                  {\" \"}\r\n                  <button className=\"button col-12\" onClick={addCategorie}>\r\n                    submit\r\n                  </button>\r\n                </div>\r\n                <div className=\"col-3\">\r\n                  <button\r\n                    className=\"button col-12\"\r\n                    onClick={doCloseopenAddCategorie}\r\n                  >\r\n                    cancel\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <div></div>\r\n      )}\r\n\r\n      <div className=\"row\">\r\n        <div className=\"col-5\">\r\n          <div className=\"card\">\r\n            <div className=\"card__body\">\r\n              {dataReady ? (\r\n                <Table\r\n                  limit=\"10\"\r\n                  headData={customerTableHead}\r\n                  renderHead={(item, index) => renderHead(item, index)}\r\n                  bodyData={listCategories}\r\n                  renderBody={(item, index) => renderBody(item, index)}\r\n                />\r\n              ) : (\r\n                <div></div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-6\">\r\n          {openMealDetail ? (\r\n            <div className=\"card\">\r\n              <div className=\"card__body\">\r\n                <div className=\"row\">\r\n                  <div className=\"col-4\">\r\n                    <h4>Meal name : </h4>\r\n                    <p>{meal.name}</p>\r\n                    <h4>Meal description : </h4>\r\n                    <p>{meal.description} </p>\r\n                    <h4>Meal price : </h4>\r\n                    <p>{meal.price} DT</p>\r\n                    <h4>Meal duration : </h4>\r\n                    <p>{meal.duration} min</p>\r\n                    <h4>Meal discount : </h4>\r\n                    <p>{meal.discount} %</p>\r\n                  </div>\r\n                  <div className=\"col-8\">\r\n                    <div className=\"row\">\r\n                      <div className=\"col-8\">\r\n                        {\" \"}\r\n                        <button\r\n                          onClick={doopeningrediantList}\r\n                          className=\"button col-8\"\r\n                        >\r\n                          toggle ingrediants\r\n                        </button>\r\n                      </div>\r\n                      <div className=\"col-4\">\r\n                        <button\r\n                          className=\"button col-8\"\r\n                          onClick={() => closedEditMeal()}\r\n                        >\r\n                          close\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n\r\n                    {openIngredientLis ? (\r\n                      <div>\r\n                        <br />{\" \"}\r\n                        <button\r\n                          className=\"button col-5\"\r\n                          onClick={openAddIngreDiantsToExistant}\r\n                        >\r\n                          add ingrediants\r\n                        </button>\r\n                        {addIngrediantToExist ? (\r\n                          <div>\r\n                            <br />\r\n                            <br />\r\n                            <Input type=\"text\" placeholder=\"Ingrediant\" />\r\n                            <button className=\"button col-5\">submit </button>\r\n                            <br />\r\n                            <br />\r\n                          </div>\r\n                        ) : (\r\n                          <div></div>\r\n                        )}\r\n                        <Table\r\n                          limit=\"10\"\r\n                          headData={ingrediantTableHead}\r\n                          renderHead={(item, index) =>\r\n                            renderIngrediantHead(item, index)\r\n                          }\r\n                          bodyData={ingrediantList}\r\n                          renderBody={(item, index) =>\r\n                            renderIngrediantBody(item, index)\r\n                          }\r\n                        />\r\n                      </div>\r\n                    ) : (\r\n                      <div></div>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            <div></div>\r\n          )}\r\n          {openEdit ? (\r\n            <div className=\"card\">\r\n              <div className=\"card__body\">\r\n                <h3>{categorieTitle}</h3>\r\n                <br></br>\r\n                <div className=\"row\">\r\n                  <div className=\"col-6\">\r\n                    <h4>Meals list :</h4>\r\n                  </div>\r\n                  <div className=\"col-6\">\r\n                    <div className=\"row\">\r\n                      <button className=\"button col-5\" onClick={doOpenAddMeal}>\r\n                        Add Meal\r\n                      </button>\r\n                      <div className=\"col-1\"></div>\r\n                      <button className=\"button col-4\">Delete</button>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                {openaddMeal ? (\r\n                  <div className=\"col-12\">\r\n                    <div className=\"row\">\r\n                      <div className=\"col-6\">\r\n                        <br />\r\n\r\n                        <label>Meal name</label>\r\n                        <br />\r\n                        <br />\r\n                        <Input\r\n                          type=\"text\"\r\n                          placeholder=\"Meal name\"\r\n                          value={mealtoAdd.name}\r\n                          onChange={(e) =>\r\n                            setmealtoAdd((prev) => ({\r\n                              name: e.target.value,\r\n                            }))\r\n                          }\r\n                        />\r\n                        <br />\r\n\r\n                        <label>Meal description</label>\r\n                        <br />\r\n                        <br />\r\n                        <Input\r\n                          type=\"text\"\r\n                          placeholder=\"Meal description\"\r\n                          value={mealtoAdd.description}\r\n                          onChange={(e) =>\r\n                            setmealtoAdd((prev) => ({\r\n                              name: prev.name,\r\n                              description: e.target.value,\r\n                            }))\r\n                          }\r\n                        />\r\n\r\n                        <label>\r\n                          <br />\r\n\r\n                          <label>Meal price</label>\r\n                          <br />\r\n                          <br />\r\n                          <Input\r\n                            type=\"number\"\r\n                            placeholder=\"Meal price\"\r\n                            value={mealtoAdd.price}\r\n                            onChange={(e) =>\r\n                              setmealtoAdd((prev) => ({\r\n                                name: prev.name,\r\n                                description: prev.description,\r\n                                price: e.target.value,\r\n                              }))\r\n                            }\r\n                          />\r\n                        </label>\r\n                        <br />\r\n\r\n                        <label>Meal duration</label>\r\n                        <br />\r\n                        <br />\r\n\r\n                        <Input\r\n                          type=\"number\"\r\n                          placeholder=\"Meal duration\"\r\n                          value={mealtoAdd.duration}\r\n                          onChange={(e) =>\r\n                            setmealtoAdd((prev) => ({\r\n                              name: prev.name,\r\n                              description: prev.description,\r\n                              price: prev.price,\r\n                              duration: e.target.value,\r\n                            }))\r\n                          }\r\n                        />\r\n                        <br />\r\n\r\n                        <label>Meal discount</label>\r\n                        <br />\r\n                        <br />\r\n\r\n                        <Input\r\n                          type=\"number\"\r\n                          placeholder=\"Meal discount\"\r\n                          value={mealtoAdd.discount}\r\n                          onChange={(e) =>\r\n                            setmealtoAdd((prev) => ({\r\n                              name: prev.name,\r\n                              description: prev.description,\r\n                              price: prev.price,\r\n                              duration: prev.duration,\r\n                              discount: e.target.value,\r\n                            }))\r\n                          }\r\n                        />\r\n\r\n                        <br></br>\r\n                        <div className=\"row\">\r\n                          <input\r\n                            className=\"col-6\"\r\n                            type=\"file\"\r\n                            onChange={handleFileSelectMeal}\r\n                          ></input>\r\n                        </div>\r\n                        {erroraddingrediant ? (\r\n                          <p className=\"error\">\r\n                            You should at least add one ingrediant\r\n                          </p>\r\n                        ) : (\r\n                          <div></div>\r\n                        )}\r\n                      </div>\r\n                      <div className=\"col-6\">\r\n                        <br />\r\n                        <h3>Ingrediants</h3>\r\n                        <br />\r\n                        <Input\r\n                          type=\"text\"\r\n                          placeholder=\"Ingrediant\"\r\n                          value={ingrediantToNewMeal}\r\n                          onChange={(e) =>\r\n                            setingrediantToNewMeal(e.target.value)\r\n                          }\r\n                        />\r\n                        <button\r\n                          className=\"button col-8\"\r\n                          onClick={addIngrediantToNewMeal}\r\n                        >\r\n                          Add Ingrediants\r\n                        </button>\r\n                        <br />\r\n                        <br />\r\n\r\n                        <Table\r\n                          limit=\"10\"\r\n                          headData={ingrediantTableHead}\r\n                          renderHead={(item, index) =>\r\n                            renderIngrediantHead(item, index)\r\n                          }\r\n                          bodyData={ingrediantlistNew}\r\n                          renderBody={(item, index) =>\r\n                            renderIngrediantBody(item, index)\r\n                          }\r\n                        />\r\n                      </div>\r\n                      <br></br>\r\n                    </div>\r\n                    <br></br>\r\n\r\n                    <div className=\"row\">\r\n                      <div className=\"col-3\">\r\n                        {\" \"}\r\n                        <button className=\"button col-12\" onClick={DoaddMeal}>\r\n                          submit\r\n                        </button>\r\n                      </div>\r\n                      <div className=\"col-3\">\r\n                        <button\r\n                          className=\"button col-12\"\r\n                          onClick={doCloseAddMeal}\r\n                        >\r\n                          cancel\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                ) : (\r\n                  <div></div>\r\n                )}\r\n\r\n                <br />\r\n                {dataReady ? (\r\n                  <Table\r\n                    limit=\"10\"\r\n                    headData={mealTableHead}\r\n                    renderHead={(item, index) => renderHead(item, index)}\r\n                    bodyData={listMeal}\r\n                    renderBody={(item, index) => renderMealBody(item, index)}\r\n                  />\r\n                ) : (\r\n                  <div></div>\r\n                )}\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            <div></div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Menu;\r\n","C:\\Users\\21653\\Downloads\\tua-react-admin-main\\tua-react-admin-main\\src\\pages\\Orders\\Orders.jsx",["109","110","111","112"],"import React from \"react\";\r\nimport notifsound from \"../../assets/notif.mp3\";\r\n\r\nimport axios from \"axios\";\r\nimport { BaseUrl } from \"../../helpers/base_url\";\r\nimport Table from \"../../components/table/Table\";\r\nimport socketIOClient from \"socket.io-client\";\r\nimport { useState } from \"react\";\r\nconst SERVER = \"http://127.0.0.1:8080\";\r\n\r\nconst Orders = () => {\r\n  const [listOrder, setlistOrder] = useState([]);\r\n  const [dataReady, setdataReady] = useState(false);\r\n  const [newOrdersList, setnewOrdersList] = useState([]);\r\n  const customerTableHead = [\"date\", \"note\", \"price\", \"meal number\", \"\"];\r\n  const renderHead = (item, index) => <th key={index}>{item}</th>;\r\n  const renderOrderBody = (item, index) => (\r\n    <tr key={index}>\r\n      <td className=\" col-4\">{item.createdAt}</td>\r\n\r\n      <td className=\" col-2\">{item.note}</td>\r\n\r\n      <td className=\" col-2\">{item.price}</td>\r\n\r\n      <td className=\" col-2\">{item.meals.length}</td>\r\n    </tr>\r\n  );\r\n  const getmealbyId = (id) => {};\r\n  React.useEffect(async () => {\r\n    var socket = socketIOClient(SERVER);\r\n    socket.on(\r\n      \"newcommand\" + localStorage.getItem(\"restaurant_id\"),\r\n      (command) => {\r\n        setnewOrdersList((newOrdersList) => [...newOrdersList, command]);\r\n      }\r\n    );\r\n\r\n    await axios\r\n      .get(\r\n        BaseUrl +\r\n          \"/command/getall/byrestaurantid/\" +\r\n          localStorage.getItem(\"restaurant_id\")\r\n      )\r\n      .then((response) => {\r\n        //   console.log(response.data);\r\n        setlistOrder(response.data);\r\n        setdataReady(true);\r\n      });\r\n    return () => socket.disconnect();\r\n  }, []);\r\n  const renderNewOrder = (item) => {\r\n    <div className=\"card col-8\">\r\n      <div className=\"card__body\">\r\n        <div className=\"row\">\r\n          <div className=\"col-4\">\r\n            {\" \"}\r\n            <h3>New Order</h3>\r\n          </div>\r\n          <div className=\"col-4\">\r\n            <button className=\"button col-6\">Accept</button>\r\n          </div>\r\n        </div>\r\n        <br />\r\n        <h4>Note :</h4>\r\n        <p>{item.note}</p>\r\n        <br />\r\n\r\n        <h4>Meal List :</h4>\r\n        {item.meals.map((item) => (\r\n          <p>{item.name}</p>\r\n        ))}\r\n        <br />\r\n\r\n        <h4>Price :</h4>\r\n        <p>{item.price}</p>\r\n      </div>\r\n    </div>;\r\n  };\r\n\r\n  return (\r\n    <div className=\"col-12\">\r\n      <h2 className=\"page-header\">Orders</h2>\r\n      <br />\r\n      <div>\r\n        {newOrdersList.sort().map((item) => (\r\n          <div className=\"card col-8\">\r\n            <div className=\"card__body\">\r\n              <div className=\"row\">\r\n                <div className=\"col-4\">\r\n                  {\" \"}\r\n                  <h3>New Order</h3>\r\n                </div>\r\n                <div className=\"col-4\">\r\n                  <button className=\"button col-6\">Accept</button>\r\n                </div>\r\n              </div>\r\n              <br />\r\n              <h4>Note :</h4>\r\n              <p>{item.note}</p>\r\n              <br />\r\n\r\n              <h4>Meal List :</h4>\r\n              {item.meals.sort().map((meal) => (\r\n                <p>{meal.name} </p>\r\n              ))}\r\n              <br />\r\n\r\n              <h4>Price :</h4>\r\n              <p>{item.price}</p>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <div className=\"col-12\">\r\n        <div className=\"row\">\r\n          <div className=\"col-12\">\r\n            <div className=\"card\">\r\n              <div className=\"card__body\">\r\n                {dataReady ? (\r\n                  <Table\r\n                    limit=\"10\"\r\n                    headData={customerTableHead}\r\n                    renderHead={(item, index) => renderHead(item, index)}\r\n                    bodyData={listOrder}\r\n                    renderBody={(item, index) => renderOrderBody(item, index)}\r\n                  />\r\n                ) : (\r\n                  <div></div>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Orders;\r\n","C:\\Users\\21653\\Downloads\\tua-react-admin-main\\tua-react-admin-main\\src\\components\\table\\Table.jsx",[],"C:\\Users\\21653\\Downloads\\tua-react-admin-main\\tua-react-admin-main\\src\\components\\badge\\Badge.jsx",[],"C:\\Users\\21653\\Downloads\\tua-react-admin-main\\tua-react-admin-main\\src\\components\\status-card\\StatusCard.jsx",[],{"ruleId":"113","replacedBy":"114"},{"ruleId":"115","replacedBy":"116"},{"ruleId":"117","severity":1,"message":"118","line":33,"column":12,"nodeType":"119","messageId":"120","endLine":33,"endColumn":14},{"ruleId":"117","severity":1,"message":"118","line":35,"column":18,"nodeType":"119","messageId":"120","endLine":35,"endColumn":20},{"ruleId":"121","severity":1,"message":"122","line":40,"column":11,"nodeType":"123","messageId":"124","endLine":40,"endColumn":26},{"ruleId":"117","severity":1,"message":"118","line":18,"column":24,"nodeType":"119","messageId":"120","endLine":18,"endColumn":26},{"ruleId":"117","severity":1,"message":"118","line":28,"column":24,"nodeType":"119","messageId":"120","endLine":28,"endColumn":26},{"ruleId":"125","severity":1,"message":"126","line":25,"column":19,"nodeType":"127","endLine":46,"endColumn":4},{"ruleId":"125","severity":1,"message":"128","line":46,"column":6,"nodeType":"129","endLine":46,"endColumn":8,"suggestions":"130"},{"ruleId":"117","severity":1,"message":"118","line":74,"column":14,"nodeType":"119","messageId":"120","endLine":74,"endColumn":16},{"ruleId":"121","severity":1,"message":"131","line":1,"column":16,"nodeType":"123","messageId":"124","endLine":1,"endColumn":25},{"ruleId":"117","severity":1,"message":"132","line":168,"column":39,"nodeType":"119","messageId":"120","endLine":168,"endColumn":41},{"ruleId":"117","severity":1,"message":"132","line":65,"column":25,"nodeType":"119","messageId":"120","endLine":65,"endColumn":27},{"ruleId":"117","severity":1,"message":"132","line":122,"column":36,"nodeType":"119","messageId":"120","endLine":122,"endColumn":38},{"ruleId":"125","severity":1,"message":"126","line":126,"column":19,"nodeType":"127","endLine":140,"endColumn":4},{"ruleId":"117","severity":1,"message":"118","line":162,"column":24,"nodeType":"119","messageId":"120","endLine":162,"endColumn":26},{"ruleId":"117","severity":1,"message":"118","line":206,"column":26,"nodeType":"119","messageId":"120","endLine":206,"endColumn":28},{"ruleId":"121","severity":1,"message":"133","line":2,"column":8,"nodeType":"123","messageId":"124","endLine":2,"endColumn":18},{"ruleId":"121","severity":1,"message":"134","line":28,"column":9,"nodeType":"123","messageId":"124","endLine":28,"endColumn":20},{"ruleId":"125","severity":1,"message":"126","line":29,"column":19,"nodeType":"127","endLine":50,"endColumn":4},{"ruleId":"121","severity":1,"message":"135","line":51,"column":9,"nodeType":"123","messageId":"124","endLine":51,"endColumn":23},"no-native-reassign",["136"],"no-negated-in-lhs",["137"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-unused-vars","'activeItemOwner' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook React.useEffect has a missing dependency: 'notifNumber'. Either include it or remove the dependency array. You can also do a functional update 'setnotifNumber(n => ...)' if you only need 'notifNumber' in the 'setnotifNumber' call.","ArrayExpression",["138"],"'useEffect' is defined but never used.","Expected '!==' and instead saw '!='.","'notifsound' is defined but never used.","'getmealbyId' is assigned a value but never used.","'renderNewOrder' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"139","fix":"140"},"Update the dependencies array to be: [notifNumber]",{"range":"141","text":"142"},[1331,1333],"[notifNumber]"]
>>>>>>> 1ebdcd8d (upload image)
