[{"C:\\Users\\21653\\Downloads\\tua-react-admin-main\\tua-react-admin-main\\src\\index.js":"1","C:\\Users\\21653\\Downloads\\tua-react-admin-main\\tua-react-admin-main\\src\\reportWebVitals.js":"2","C:\\Users\\21653\\Downloads\\tua-react-admin-main\\tua-react-admin-main\\src\\components\\layout\\Layout.jsx":"3","C:\\Users\\21653\\Downloads\\tua-react-admin-main\\tua-react-admin-main\\src\\redux\\reducers\\index.js":"4","C:\\Users\\21653\\Downloads\\tua-react-admin-main\\tua-react-admin-main\\src\\redux\\actions\\ThemeAction.js":"5","C:\\Users\\21653\\Downloads\\tua-react-admin-main\\tua-react-admin-main\\src\\components\\Routes.jsx":"6","C:\\Users\\21653\\Downloads\\tua-react-admin-main\\tua-react-admin-main\\src\\components\\topnav\\TopNav.jsx":"7","C:\\Users\\21653\\Downloads\\tua-react-admin-main\\tua-react-admin-main\\src\\components\\sidebar\\Sidebar.jsx":"8","C:\\Users\\21653\\Downloads\\tua-react-admin-main\\tua-react-admin-main\\src\\redux\\reducers\\ThemeReducer.js":"9","C:\\Users\\21653\\Downloads\\tua-react-admin-main\\tua-react-admin-main\\src\\pages\\Customers.jsx":"10","C:\\Users\\21653\\Downloads\\tua-react-admin-main\\tua-react-admin-main\\src\\pages\\Dashboard.jsx":"11","C:\\Users\\21653\\Downloads\\tua-react-admin-main\\tua-react-admin-main\\src\\components\\thememenu\\ThemeMenu.jsx":"12","C:\\Users\\21653\\Downloads\\tua-react-admin-main\\tua-react-admin-main\\src\\components\\dropdown\\Dropdown.jsx":"13","C:\\Users\\21653\\Downloads\\tua-react-admin-main\\tua-react-admin-main\\src\\components\\status-card\\StatusCard.jsx":"14","C:\\Users\\21653\\Downloads\\tua-react-admin-main\\tua-react-admin-main\\src\\components\\badge\\Badge.jsx":"15","C:\\Users\\21653\\Downloads\\tua-react-admin-main\\tua-react-admin-main\\src\\components\\table\\Table.jsx":"16","C:\\Users\\21653\\Downloads\\tua-react-admin-main\\tua-react-admin-main\\src\\pages\\Login\\login.js":"17","C:\\Users\\21653\\Downloads\\tua-react-admin-main\\tua-react-admin-main\\src\\pages\\Login\\LoginElements.js":"18","C:\\Users\\21653\\Downloads\\tua-react-admin-main\\tua-react-admin-main\\src\\pages\\Menues\\Menu.jsx":"19","C:\\Users\\21653\\Downloads\\tua-react-admin-main\\tua-react-admin-main\\src\\pages\\Orders\\Orders.jsx":"20","C:\\Users\\21653\\Downloads\\tua-react-admin-main\\tua-react-admin-main\\src\\helpers\\base_url.jsx":"21"},{"size":897,"mtime":1645568187241,"results":"22","hashOfConfig":"23"},{"size":362,"mtime":1645484965820,"results":"24","hashOfConfig":"23"},{"size":1562,"mtime":1645551858653,"results":"25","hashOfConfig":"23"},{"size":162,"mtime":1645484967655,"results":"26","hashOfConfig":"23"},{"size":364,"mtime":1645484967589,"results":"27","hashOfConfig":"23"},{"size":578,"mtime":1645557458850,"results":"28","hashOfConfig":"23"},{"size":2371,"mtime":1645555399388,"results":"29","hashOfConfig":"23"},{"size":1635,"mtime":1645804951296,"results":"30","hashOfConfig":"23"},{"size":399,"mtime":1645484967625,"results":"31","hashOfConfig":"23"},{"size":1487,"mtime":1645484967486,"results":"32","hashOfConfig":"23"},{"size":6956,"mtime":1645484967518,"results":"33","hashOfConfig":"23"},{"size":4901,"mtime":1645484967348,"results":"34","hashOfConfig":"23"},{"size":1817,"mtime":1645484966896,"results":"35","hashOfConfig":"23"},{"size":448,"mtime":1645484967180,"results":"36","hashOfConfig":"23"},{"size":216,"mtime":1645484966812,"results":"37","hashOfConfig":"23"},{"size":2402,"mtime":1645484967280,"results":"38","hashOfConfig":"23"},{"size":910,"mtime":1645551034573,"results":"39","hashOfConfig":"23"},{"size":1401,"mtime":1645808529930,"results":"40","hashOfConfig":"23"},{"size":8078,"mtime":1645920786517,"results":"41","hashOfConfig":"23"},{"size":2574,"mtime":1645557609036,"results":"42","hashOfConfig":"23"},{"size":43,"mtime":1645822199663,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"1jiac6i",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"46"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"46"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"C:\\Users\\21653\\Downloads\\tua-react-admin-main\\tua-react-admin-main\\src\\index.js",[],["90","91"],"C:\\Users\\21653\\Downloads\\tua-react-admin-main\\tua-react-admin-main\\src\\reportWebVitals.js",[],"C:\\Users\\21653\\Downloads\\tua-react-admin-main\\tua-react-admin-main\\src\\components\\layout\\Layout.jsx",[],"C:\\Users\\21653\\Downloads\\tua-react-admin-main\\tua-react-admin-main\\src\\redux\\reducers\\index.js",[],"C:\\Users\\21653\\Downloads\\tua-react-admin-main\\tua-react-admin-main\\src\\redux\\actions\\ThemeAction.js",[],"C:\\Users\\21653\\Downloads\\tua-react-admin-main\\tua-react-admin-main\\src\\components\\Routes.jsx",[],"C:\\Users\\21653\\Downloads\\tua-react-admin-main\\tua-react-admin-main\\src\\components\\topnav\\TopNav.jsx",[],"C:\\Users\\21653\\Downloads\\tua-react-admin-main\\tua-react-admin-main\\src\\components\\sidebar\\Sidebar.jsx",["92","93","94"],"import React from 'react'\n\nimport { Link } from 'react-router-dom'\n\nimport './sidebar.css'\n\nimport logo from '../../assets/images/LEDYLOGO.png'\n\nimport sidebar_items from '../../assets/JsonData/sidebar_routes.json'\n\nimport sidebar_items_owner from '../../assets/JsonData/sidebar_routes.json'\n\n\nconst SidebarItem = props => {\n\n    const active = props.active ? 'active' : ''\n\n    return (\n        <div className=\"sidebar__item\">\n            <div className={`sidebar__item-inner ${active}`}>\n                <i className={props.icon}></i>\n                <span>\n                    {props.title}\n                </span>\n            </div>\n        </div>\n    )\n}\n\nconst Sidebar = props => {\n    let role = \"waiter\"\n    let items =[];\n    if(role==\"waiter\"){\n        items=sidebar_items\n    }else if(role==\"owner\"){\n        items=sidebar_items_owner\n    }\n\n    const activeItem = items.findIndex(item => item.route === props.location.pathname)\n    const activeItemOwner = items.findIndex(item=>item.route===props.location.pathname)\n    return (\n        <div className='sidebar'>\n            <div className=\"sidebar__logo\">\n                <img src={logo} alt=\"company logo\" />\n            </div>\n            {\n                items.map((item, index) => (\n                    <Link to={item.route} key={index}>\n                        <SidebarItem\n                            title={item.display_name}\n                            icon={item.icon}\n                            active={index === activeItem}\n                        />\n                    </Link>\n                ))\n            }\n        </div>\n    )\n}\n\nexport default Sidebar\n","C:\\Users\\21653\\Downloads\\tua-react-admin-main\\tua-react-admin-main\\src\\redux\\reducers\\ThemeReducer.js",[],"C:\\Users\\21653\\Downloads\\tua-react-admin-main\\tua-react-admin-main\\src\\pages\\Customers.jsx",[],"C:\\Users\\21653\\Downloads\\tua-react-admin-main\\tua-react-admin-main\\src\\pages\\Dashboard.jsx",["95"],"import React, {useEffect} from 'react'\n\nimport { Link } from 'react-router-dom'\n\nimport Chart from 'react-apexcharts'\n\nimport { useSelector } from 'react-redux'\n\nimport StatusCard from '../components/status-card/StatusCard'\n\nimport Table from '../components/table/Table'\n\nimport Badge from '../components/badge/Badge'\n\nimport statusCards from '../assets/JsonData/status-card-data.json'\n\nconst chartOptions = {\n    series: [{\n        name: 'Online Customers',\n        data: [40,70,20,90,36,80,30,91,60]\n    }, {\n        name: 'Store Customers',\n        data: [40, 30, 70, 80, 40, 16, 40, 20, 51, 10]\n    }],\n    options: {\n        color: ['#6ab04c', '#2980b9'],\n        chart: {\n            background: 'transparent'\n        },\n        dataLabels: {\n            enabled: false\n        },\n        stroke: {\n            curve: 'smooth'\n        },\n        xaxis: {\n            categories: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep']\n        },\n        legend: {\n            position: 'top'\n        },\n        grid: {\n            show: false\n        }\n    }\n}\n\nconst topCustomers = {\n    head: [\n        'user',\n        'total orders',\n        'total spending'\n    ],\n    body: [\n        {\n            \"username\": \"john doe\",\n            \"order\": \"490\",\n            \"price\": \"$15,870\"\n        },\n        {\n            \"username\": \"frank iva\",\n            \"order\": \"250\",\n            \"price\": \"$12,251\"\n        },\n        {\n            \"username\": \"anthony baker\",\n            \"order\": \"120\",\n            \"price\": \"$10,840\"\n        },\n        {\n            \"username\": \"frank iva\",\n            \"order\": \"110\",\n            \"price\": \"$9,251\"\n        },\n        {\n            \"username\": \"anthony baker\",\n            \"order\": \"80\",\n            \"price\": \"$8,840\"\n        }\n    ]\n}\n\nconst renderCusomerHead = (item, index) => (\n    <th key={index}>{item}</th>\n)\n\nconst renderCusomerBody = (item, index) => (\n    <tr key={index}>\n        <td>{item.username}</td>\n        <td>{item.order}</td>\n        <td>{item.price}</td>\n    </tr>\n)\n\nconst latestOrders = {\n    header: [\n        \"order id\",\n        \"user\",\n        \"total price\",\n        \"date\",\n        \"status\"\n    ],\n    body: [\n        {\n            id: \"#OD1711\",\n            user: \"john doe\",\n            date: \"17 Jun 2021\",\n            price: \"$900\",\n            status: \"shipping\"\n        },\n        {\n            id: \"#OD1712\",\n            user: \"frank iva\",\n            date: \"1 Jun 2021\",\n            price: \"$400\",\n            status: \"paid\"\n        },\n        {\n            id: \"#OD1713\",\n            user: \"anthony baker\",\n            date: \"27 Jun 2021\",\n            price: \"$200\",\n            status: \"pending\"\n        },\n        {\n            id: \"#OD1712\",\n            user: \"frank iva\",\n            date: \"1 Jun 2021\",\n            price: \"$400\",\n            status: \"paid\"\n        },\n        {\n            id: \"#OD1713\",\n            user: \"anthony baker\",\n            date: \"27 Jun 2021\",\n            price: \"$200\",\n            status: \"refund\"\n        }\n    ]\n}\n\nconst orderStatus = {\n    \"shipping\": \"primary\",\n    \"pending\": \"warning\",\n    \"paid\": \"success\",\n    \"refund\": \"danger\"\n}\n\nconst renderOrderHead = (item, index) => (\n    <th key={index}>{item}</th>\n)\n\nconst renderOrderBody = (item, index) => (\n    <tr key={index}>\n        <td>{item.id}</td>\n        <td>{item.user}</td>\n        <td>{item.price}</td>\n        <td>{item.date}</td>\n        <td>\n            <Badge type={orderStatus[item.status]} content={item.status}/>\n        </td>\n    </tr>\n)\n\nconst Dashboard = () => {\n\n    const themeReducer = useSelector(state => state.ThemeReducer.mode)\n\n    return (\n        <div>\n            <h2 className=\"page-header\">Dashboard</h2>\n            <div className=\"row\">\n                <div className=\"col-6\">\n                    <div className=\"row\">\n                        {\n                            statusCards.map((item, index) => (\n                                <div className=\"col-6\" key={index}>\n                                    <StatusCard\n                                        icon={item.icon}\n                                        count={item.count}\n                                        title={item.title}\n                                    />\n                                </div>\n                            ))\n                        }\n                    </div>\n                </div>\n                <div className=\"col-6\">\n                    <div className=\"card full-height\">\n                        {/* chart */}\n                        <Chart\n                            options={themeReducer === 'theme-mode-dark' ? {\n                                ...chartOptions.options,\n                                theme: { mode: 'dark'}\n                            } : {\n                                ...chartOptions.options,\n                                theme: { mode: 'light'}\n                            }}\n                            series={chartOptions.series}\n                            type='line'\n                            height='100%'\n                        />\n                    </div>\n                </div>\n                <div className=\"col-4\">\n                    <div className=\"card\">\n                        <div className=\"card__header\">\n                            <h3>top customers</h3>\n                        </div>\n                        <div className=\"card__body\">\n                            <Table\n                                headData={topCustomers.head}\n                                renderHead={(item, index) => renderCusomerHead(item, index)}\n                                bodyData={topCustomers.body}\n                                renderBody={(item, index) => renderCusomerBody(item, index)}\n                            />\n                        </div>\n                        <div className=\"card__footer\">\n                            <Link to='/'>view all</Link>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"col-8\">\n                    <div className=\"card\">\n                        <div className=\"card__header\">\n                            <h3>latest orders</h3>\n                        </div>\n                        <div className=\"card__body\">\n                            <Table\n                                headData={latestOrders.header}\n                                renderHead={(item, index) => renderOrderHead(item, index)}\n                                bodyData={latestOrders.body}\n                                renderBody={(item, index) => renderOrderBody(item, index)}\n                            />\n                        </div>\n                        <div className=\"card__footer\">\n                            <Link to='/'>view all</Link>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Dashboard\n","C:\\Users\\21653\\Downloads\\tua-react-admin-main\\tua-react-admin-main\\src\\components\\thememenu\\ThemeMenu.jsx",[],"C:\\Users\\21653\\Downloads\\tua-react-admin-main\\tua-react-admin-main\\src\\components\\dropdown\\Dropdown.jsx",[],"C:\\Users\\21653\\Downloads\\tua-react-admin-main\\tua-react-admin-main\\src\\components\\status-card\\StatusCard.jsx",[],"C:\\Users\\21653\\Downloads\\tua-react-admin-main\\tua-react-admin-main\\src\\components\\badge\\Badge.jsx",[],"C:\\Users\\21653\\Downloads\\tua-react-admin-main\\tua-react-admin-main\\src\\components\\table\\Table.jsx",[],"C:\\Users\\21653\\Downloads\\tua-react-admin-main\\tua-react-admin-main\\src\\pages\\Login\\login.js",[],"C:\\Users\\21653\\Downloads\\tua-react-admin-main\\tua-react-admin-main\\src\\pages\\Login\\LoginElements.js",[],"C:\\Users\\21653\\Downloads\\tua-react-admin-main\\tua-react-admin-main\\src\\pages\\Menues\\Menu.jsx",["96","97"],"import React, { useState } from \"react\";\r\nimport { Input } from \"../Login/LoginElements\";\r\nimport axios from \"axios\";\r\nimport { BaseUrl } from \"../../helpers/base_url\";\r\nimport Table from \"../../components/table/Table\";\r\n\r\nconst Menu = () => {\r\n  const [openAddCategorie, setopenAddCategorie] = useState(false);\r\n  const [categorietoadd, setcategorietoadd] = useState(\"\");\r\n  const [listCategories, setlistCategories] = useState([]);\r\n  const [listMeal, setlistMeal] = useState([]);\r\n  const [categorieTitle, setcategorieTitle] = useState(\"\");\r\n  const [openEdit, setopenEdit] = useState(false);\r\n  const [dataReady, setdataReady] = useState(false);\r\n  const [openMealDetail, setopenMealDetail] = useState(false);\r\n  const [openIngredientLis, setopenIngredientLis] = useState(false);\r\n  const [ingrediantList, setingrediantList] = useState([]);\r\n  const [meal, setmeal] = useState({\r\n    name: \"\",\r\n    price: 0,\r\n    discount: 0,\r\n    duration: 0,\r\n    hotMeal: false,\r\n    description: \"\",\r\n  });\r\n  const doopeningrediantList = () => {\r\n    setopenIngredientLis(!openIngredientLis);\r\n  };\r\n  const customerTableHead = [\"\", \"name\", \"\"];\r\n  const mealTableHead = [\"\", \"name\", \"Description\"];\r\n  const ingrediantTableHead = [\"name\"];\r\n\r\n  const renderHead = (item, index) => <th key={index}>{item}</th>;\r\n  const renderIngrediantHead = (item, index) => (\r\n    <th key={index} className=\" col-1\">\r\n      {item}\r\n    </th>\r\n  );\r\n\r\n  const openEditCatfore = async (categorie) => {\r\n    setopenEdit(false);\r\n    setopenMealDetail(false);\r\n\r\n    await setlistMeal(categorie.meals);\r\n    setcategorieTitle(categorie.name);\r\n    setopenEdit(true);\r\n  };\r\n  const renderBody = (item, index) => (\r\n    <tr key={index}>\r\n      <td></td>\r\n      <td>{item.name}</td>\r\n      <td>\r\n        <button onClick={() => openEditCatfore(item)} className=\"button col-6\">\r\n          Edit\r\n        </button>\r\n      </td>\r\n    </tr>\r\n  );\r\n  const opedEditMeal = async (onemeal) => {\r\n    setopenMealDetail(false);\r\n    await setingrediantList(onemeal.ingrediants[0]);\r\n    setmeal({\r\n      name: onemeal.name,\r\n      price: onemeal.price,\r\n      discount: onemeal.duration,\r\n      duration: onemeal.duration,\r\n      hotMeal: onemeal.hotMeal,\r\n      description: onemeal.description,\r\n    });\r\n    setopenMealDetail(true);\r\n  };\r\n  const renderIngrediantBody = (item, index) => (\r\n    <tr key={index}>\r\n      <td className=\" col-1\">{item}</td>\r\n\r\n      <td>\r\n        <button className=\"button col-3\">Edit</button>\r\n      </td>\r\n    </tr>\r\n  );\r\n\r\n  const renderMealBody = (item, index) => (\r\n    <tr key={index}>\r\n      <td></td>\r\n      <td>{item.name}</td>\r\n      <td>{item.description}</td>\r\n      <td>\r\n        <button className=\"button col-10\" onClick={() => opedEditMeal(item)}>\r\n          Detail\r\n        </button>\r\n      </td>\r\n    </tr>\r\n  );\r\n\r\n  React.useEffect(async () => {\r\n    await axios\r\n      .get(BaseUrl + \"/menu/getbyrestaurant/6212cec87c3cf81fcfae25cf\")\r\n      .then((response) => {\r\n        setlistCategories(response.data[\"categories\"]);\r\n        setdataReady(true);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }, []);\r\n  const doOpenAddCategorie = () => {\r\n    setopenAddCategorie(true);\r\n  };\r\n  const doCloseopenAddCategorie = () => {\r\n    setopenAddCategorie(false);\r\n  };\r\n  const addCategorie = () => {\r\n    axios\r\n      .post(\r\n        BaseUrl + \"/categories/createwithoutMeals\",\r\n        {\r\n          name: categorietoadd,\r\n        },\r\n        {\r\n          headers: { restaurantid: \"6212cec87c3cf81fcfae25cf\" },\r\n        }\r\n      )\r\n      .then((res) => {\r\n        if (res.status == 201) {\r\n          listCategories.push({ name: res.data[\"name\"] });\r\n          doCloseopenAddCategorie();\r\n          setcategorietoadd(\"\");\r\n          setdataReady(false);\r\n          setdataReady(true);\r\n        }\r\n        console.log(res);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2 className=\"page-header\">Menu</h2>\r\n      <div className=\"row\">\r\n        <h3 className=\"page-header col-3\">Categories list</h3>\r\n        <button className=\"button col-2\" onClick={doOpenAddCategorie}>\r\n          Add Categorie\r\n        </button>\r\n      </div>\r\n      {openAddCategorie ? (\r\n        <div className=\"row\">\r\n          <div className=\"col-6\">\r\n            <div className=\"card\">\r\n              <label>Categorie name</label>\r\n              <br />\r\n              <Input\r\n                type=\"text\"\r\n                placeholder=\"Categorie\"\r\n                value={categorietoadd}\r\n                onChange={(e) => setcategorietoadd(e.target.value)}\r\n              />\r\n              <button className=\"button col-2\" onClick={addCategorie}>\r\n                submit\r\n              </button>\r\n              <button\r\n                className=\"button col-2\"\r\n                onClick={doCloseopenAddCategorie}\r\n              >\r\n                cancel\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <div></div>\r\n      )}\r\n\r\n      <div className=\"row\">\r\n        <div className=\"col-5\">\r\n          <div className=\"card\">\r\n            <div className=\"card__body\">\r\n              {dataReady ? (\r\n                <Table\r\n                  limit=\"10\"\r\n                  headData={customerTableHead}\r\n                  renderHead={(item, index) => renderHead(item, index)}\r\n                  bodyData={listCategories}\r\n                  renderBody={(item, index) => renderBody(item, index)}\r\n                />\r\n              ) : (\r\n                <div></div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-6\">\r\n          {openMealDetail ? (\r\n            <div className=\"card\">\r\n              <div className=\"card__body\">\r\n                <div className=\"row\">\r\n                  <div className=\"col-4\">\r\n                    <h3>Meal Detail </h3>\r\n                    <h4>Meal name : </h4>\r\n                    <p>{meal.name}</p>\r\n                    <h4>Meal description : </h4>\r\n                    <p>{meal.description} </p>\r\n                    <h4>Meal duration : </h4>\r\n                    <p>{meal.price} DT</p>\r\n                    <h4>Meal duration : </h4>\r\n                    <p>{meal.duration} min</p>\r\n                    <h4>Meal discount : </h4>\r\n                    <p>{meal.discount} %</p>\r\n                  </div>\r\n                  <div className=\"col-8\">\r\n                    <button\r\n                      onClick={doopeningrediantList}\r\n                      className=\"button col-9\"\r\n                    >\r\n                      toggle ingrediants\r\n                    </button>\r\n                    {openIngredientLis ? (\r\n                      <Table\r\n                        limit=\"10\"\r\n                        headData={ingrediantTableHead}\r\n                        renderHead={(item, index) =>\r\n                          renderIngrediantHead(item, index)\r\n                        }\r\n                        bodyData={ingrediantList}\r\n                        renderBody={(item, index) =>\r\n                          renderIngrediantBody(item, index)\r\n                        }\r\n                      />\r\n                    ) : (\r\n                      <div></div>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            <div></div>\r\n          )}\r\n          {openEdit ? (\r\n            <div className=\"card\">\r\n              <div className=\"card__body\">\r\n                <h3>{categorieTitle}</h3>\r\n                <br></br>\r\n                <h4>Meals list :</h4>\r\n                <Table\r\n                  limit=\"10\"\r\n                  headData={mealTableHead}\r\n                  renderHead={(item, index) => renderHead(item, index)}\r\n                  bodyData={listMeal}\r\n                  renderBody={(item, index) => renderMealBody(item, index)}\r\n                />\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            <div></div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Menu;\r\n","C:\\Users\\21653\\Downloads\\tua-react-admin-main\\tua-react-admin-main\\src\\pages\\Orders\\Orders.jsx",[],"C:\\Users\\21653\\Downloads\\tua-react-admin-main\\tua-react-admin-main\\src\\helpers\\base_url.jsx",[],{"ruleId":"98","replacedBy":"99"},{"ruleId":"100","replacedBy":"101"},{"ruleId":"102","severity":1,"message":"103","line":33,"column":12,"nodeType":"104","messageId":"105","endLine":33,"endColumn":14},{"ruleId":"102","severity":1,"message":"103","line":35,"column":18,"nodeType":"104","messageId":"105","endLine":35,"endColumn":20},{"ruleId":"106","severity":1,"message":"107","line":40,"column":11,"nodeType":"108","messageId":"109","endLine":40,"endColumn":26},{"ruleId":"106","severity":1,"message":"110","line":1,"column":16,"nodeType":"108","messageId":"109","endLine":1,"endColumn":25},{"ruleId":"111","severity":1,"message":"112","line":95,"column":19,"nodeType":"113","endLine":105,"endColumn":4},{"ruleId":"102","severity":1,"message":"103","line":124,"column":24,"nodeType":"104","messageId":"105","endLine":124,"endColumn":26},"no-native-reassign",["114"],"no-negated-in-lhs",["115"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-unused-vars","'activeItemOwner' is assigned a value but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","no-global-assign","no-unsafe-negation"]